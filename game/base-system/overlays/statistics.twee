:: Statistics [widget]
<<widget "statistics">>
	<<foldout false "_virginitiesFoldout">>
		<span class="gold">순결</span>
		<<run ["vaginal", "penile", "anal", "oral", "handholding", "kiss"].forEach(type => {
			if ($player.virginity[type] is true) {
				T[type + "VirginityColour"] = "gold";
			} else if (setup.loveInterestNpc.includes($player.virginity[type])) {
				T[type + "VirginityColour"] = "lewd";
				if ($player.virginityDetails and $player.virginityDetails?.[type]?.consensual is false) T[type + "VirginityColour"] = "red";
			} else if ($player.virginityDetails and $player.virginityDetails?.[type]?.consensual isnot undefined) {
				T[type + "VirginityColour"] = $player.virginityDetails?.[type]?.consensual ? "green" : "red";
			} else {
				T[type + "VirginityColour"] = "";
			}
		})>>
		<<if $player.vaginaExist or $player.virginity.vaginal isnot true>>
			Vaginal virginity: <span @class="_vaginalVirginityColour"><<print ($player.virginity.vaginal is true ? "Present" : "Taken by " + ($player.virginity.vaginal is false ? "unknown" : $player.virginity.vaginal))>></span>
			<<virginityToolTip $player.virginityDetails.vaginal $player.virginity.vaginal "pc" "vaginal">>
			<br>
		<</if>>
		<<if $player.penisExist or $player.virginity.penile isnot true>>
			Penile virginity: <span @class="_penileVirginityColour"><<print ($player.virginity.penile is true ? "Present" : "Taken by " + ($player.virginity.penile is false ? "unknown" : $player.virginity.penile))>></span>
			<<virginityToolTip $player.virginityDetails.penile $player.virginity.penile "pc" "penile">>
			<br>
		<</if>>

		Anal virginity: <span @class="_analVirginityColour"><<print ($player.virginity.anal is true ? "Present" : "Taken by " + ($player.virginity.anal is false ? "unknown" : $player.virginity.anal))>></span>
		<<virginityToolTip $player.virginityDetails.anal $player.virginity.anal "pc" "penile">>
		<br>
		Oral virginity: <span @class="_oralVirginityColour"><<print ($player.virginity.oral is true ? "Present" : "Taken by " + ($player.virginity.oral is false ? "unknown" : $player.virginity.oral))>></span>
		<<virginityToolTip $player.virginityDetails.oral $player.virginity.oral "pc" "oral">>
		<br>
		Handholding virginity: <span @class="_handholdingVirginityColour"><<print ($player.virginity.handholding is true ? "Present" : "Taken by " + ($player.virginity.handholding is false ? "unknown" : $player.virginity.handholding))>></span>
		<<virginityToolTip $player.virginityDetails.handholding $player.virginity.handholding "pc" "handholding">>
		<br>
		First kiss: <span @class="_kissVirginityColour"><<print ($player.virginity.kiss is true ? "Present" : "Taken by " + ($player.virginity.kiss is false ? "unknown" : $player.virginity.kiss))>></span>
		<<virginityToolTip $player.virginityDetails.kiss $player.virginity.kiss "pc" "kiss">>
		<br>
		<<if $temple_rank isnot undefined and $temple_rank isnot "prospective">>
			<<trVirginity $player.virginity.temple>>사원의 서약: <<print ($player.virginity.temple is true ? "깨지지 않음" : ($player.virginity.temple is false ? "깨뜨린 이 불명" : _trResult + "에게 깨짐"))>>
			<br>
		<</if>>
		<br>
	<</foldout>>

	<<foldout false "_virginitiesTakenFoldout">>
		<span class="gold">빼앗은 순결</span>
		<!-- For the total virginities taken, iterate over every virginity type and sum up the number of entries belonging to each. -->
		<<set _total to 0>>
		<<run Object.values($virginTaken).forEach(type => _total += type.length)>>
		총 수: _total
		<br>

		<!-- For each individual virginity type, the number is named and unnamed combined, but the list of names has unnamed npcs filtered out. -->
		<<run ["vaginal", "penile", "anal", "oral", "handholding", "kiss"].forEach((virginity) => {
			const virginityNamed = `${virginity}Named`;
			T[virginityNamed] = []; /* _vaginalNamed, _penileNamed, ... */
			for (const name of V.virginTaken[virginity]) {
				if (!V.NPCNameList.includes(name)) continue;
				const details = C.npc[name].virginityDetails?.[virginity];
				let colour = '';
				if (setup.loveInterestNpc.includes(name) && (!details || details.consensual !== false)) {
					colour = "lewd";
				} else if (details && details.consensual != null) {
					colour = details.consensual ? "green" : "red";
				}
				const nameText = `<span class="${colour}">${name}</span>`;
				const detailsArg = details
					? `\`C.npc['${name}'].virginityDetails.${virginity}\`` 
					: '';
				T[virginityNamed].push(`${nameText}<<virginityToolTip ${detailsArg} ${name} "npc" ${virginity}>>`);
			}
		})>>

		보지 순결: $virginTaken.vaginal.length<<trNPCVirginity _vaginalNamed>><<print (_vaginalNamed.length gte 1 ? ", 포함된 자: " + _trResult : "")>>
		<br>
		자지 동정: $virginTaken.penile.length<<trNPCVirginity _penileNamed>><<print (_penileNamed.length gte 1 ? ", 포함된 자: " + _trResult : "")>>
		<br>
		항문 처녀: $virginTaken.anal.length<<trNPCVirginity _analNamed>><<print (_analNamed.length gte 1 ? ", 포함된 자: " + _trResult : "")>>
		<br>
		입 처녀: $virginTaken.oral.length<<trNPCVirginity _oralNamed>><<print (_oralNamed.length gte 1 ? ", 포함된 자: " + _trResult : "")>>
		<br>
		손 순결: $virginTaken.handholding.length<<trNPCVirginity _handholdingNamed>><<print (_handholdingNamed.length gte 1 ? ", 포함된 자: " + _trResult : "")>>
		<br>
		첫 키스: $virginTaken.kiss.length<<trNPCVirginity _kissNamed>><<print (_kissNamed.length gte 1 ? ", 포함된 자: " + _trResult : "")>>
		<br><br>
	<</foldout>>

	<<foldout false "_jobsFoldout">>
		<span class="gold">직업</span>
		춤 춘 횟수: $dancestat번
		<br>
		서빙한 음료 갯수: $drinksservedstat잔
		<br>
		서빙한 탁자 수: $tablesservedstat개
		<br>
		매춘한 횟수: $prostitutionstat번
		<br>
		<<if $gamemode isnot "soft">>
			강제로 매춘한 횟수: $forcedprostitutionstat번
			<br>
		<</if>>
		<<if statChange.timeTrackingTotal("docks")>>
			Hours worked on the docks: <<print statChange.timeTrackingTotal("docks")>>
			<br>
		<</if>>
		카페에서 판매한 빵: $bunstat개
		<br>
		가장 많이 생산한 "크림"의 양: <<print parseFloat($creamstat.toFixed(1))>> mL
		<br>
		가로챈 밀수꾼들: $smuggler_stolen_stat명
		<br>
		술집에서의 임무 완수 횟수: $pub_task_stat번
		<br>
		판매한 농산물: $produce_sold개
		<br>
		<<if $farmersProduce>>
			벌크로 판매한 농산물: $farmersProduce.totalSold
			<br>
		<</if>>
		사용한 비료: $fertiliser.used개
		<br>
		농장에서 일한 시간: <<print Math.trunc($farm_shift / 60)>>시간
		<br>
		착유한 소: $cattle_milked마리
		<br>
		안마사로 일하며 받은 손님: $masseur_stat명
		<br>
		야생 식물 채집: $wild_plant_stat회
		<br>
		판매한 미약: $stat_aphrodisiacs_sold병
		<br>
		<<if $brothelVending and $brothelVending.total>>
			창관에서 판매한 제품 수: $brothelVending.total개
			<br>
		<</if>>
		<<if $confessionsDone>>
			죄를 고해한 횟수: $confessionsDone번
			<br>
		<</if>>
		<<if $confessionsTaken>>
			고해가 받아들여진 횟수: $confessionsTaken번
			<br>
		<</if>>
		<br>
	<</foldout>>

	<<foldout false "_sexFoldout">>
		<span class="gold">섹스</span>
		절정을 느낀 횟수: $orgasmstat번
		<br>
		마지막으로 절정했을 때: <<statisticsTimeCompare $orgasmTimeStat>>
		<br>
		<<if $ruinedOrgasmStat>>
			절정에 도달하려다 멈춘 횟수: $ruinedOrgasmStat번
			<br>
			마지막으로 절정에 도달하려다 멈췄을 때: <<statisticsTimeCompare $ruinedOrgasmTimeStat>>
			<br>
		<</if>>
		<<if $asphyxiaLvl gte 2>>
			목이 졸린 상태에서 절정을 느낀 횟수: $chokeorgasm번
			<br>
		<</if>>
		<<if $player.penisExist or $penilestat>>
			다른 이에게 박은 횟수: $penilestat번
			<br>
			마지막으로 다른 이에게 박았던 때: <<statisticsTimeCompare $penileTimeStat>>
			<br>
		<</if>>
		<<if $straponstat>>
			페니스 밴드 자지로 다른 이에게 박은 횟수: $straponstat번
			<br>
		<</if>>
		<<if $player.penisExist or $penileejacstat>>
			다른 이에게 사정한 횟수: $penileejacstat번
			<br>
			마지막으로 다른 이에게 사정했을 때: <<statisticsTimeCompare $penileEjacTimeStat>>
			<br>
		<</if>>
		<<if $player.vaginaExist>>
			보지에 박힌 횟수: $vaginalstat번
			<br>
			마지막으로 보지에 박혔을 때: <<statisticsTimeCompare $vaginalTimeStat>>
			<br>
			보지에 사정당한 횟수: $vaginalejacstat번
			<br>
			마지막으로 보지에 사정당했을 때: <<statisticsTimeCompare $vaginalEjacTimeStat>>
			<br>
		<</if>>
		<<if $analdisable is "f">>
			항문에 박힌 횟수: $analstat번
			<br>
			마지막으로 항문에 박혔을 때: <<statisticsTimeCompare $analTimeStat>>
			<br>
			항문에 사정당한 횟수: $analejacstat번
			<br>
			마지막으로 항문에 사정당했을 때: <<statisticsTimeCompare $analEjacTimeStat>>
			<br>
		<</if>>
		입에 박힌 횟수: $oralstat번
		<br>
		입에 사정당한 횟수: $oralejacstat번
		<br>
		<<if $cunnilingusstat>>
			커닐링구스한 횟수: $cunnilingusstat번
			<br>
		<</if>>
		<<if $cunnilingusejacstat>>
			커닐링구스로 절정시킨 횟수: $cunnilingusejacstat번
			<br>
		<</if>>
		삼킨 정액의 양: <<print Math.floor($semenswallowedstat)>> mL
		<<if $bestialitydisable is "f">>
			<br>
			삼킨 동물 정액의 양: <<print Math.floor($animalsemenswallowedstat)>> mL
		<</if>>
		<br>
		손으로 해준 횟수: $handstat번
		<br>
		손으로 사정시킨 횟수: $handejacstat번
		<br>
		<<if $footdisable is "f">>
			발로 해준 횟수: $feetstat번
			<br>
			발로 사정시킨 횟수: $feetejacstat번
			<br>
		<</if>>
		허벅지로 해준 횟수: $thighstat번
		<br>
		허벅지로 사정시킨 횟수: $thighejacstat번
		<br>
		가슴으로 해준 횟수: $cheststat번
		<br>
		가슴으로 사정시킨 횟수: $chestejacstat번
		<br>
		엉덩이로 해준 횟수: $bottomstat번
		<br>
		엉덩이로 사정시킨 횟수: $bottomejacstat번
		<br>
		머리카락에 사정당한 횟수: $hairejacstat번
		<br>
		배에 사정당한 횟수: $tummyejacstat번
		<br>
		목에 사정당한 횟수: $neckejacstat번
		<br>
		<<if $player.vaginaExist>>
			보지 위에 사정당한 횟수: $vaginalentranceejacstat번
			<br>
		<</if>>
		얼굴에 사정당한 횟수: $faceejacstat번
		<br>
		몸 위나 안에 사정당한 총 횟수: $ejacstat번
		<br>
		글로리홀 횟수: $gloryholestat번
		<br>
		자위 횟수: $masturbationstat번
		<br>
		마지막으로 자위했던 때: <<statisticsTimeCompare $masturbationTimeStat>>
		<br>
		자위로 가버린 횟수: $masturbationorgasmstat번
		<br>
		마지막으로 자위로 가버린 때: <<statisticsTimeCompare $masturbationOrgasmTimeStat>>
		<br>
		자위하며 보낸 시간: <<print Math.trunc($secondsSpentMasturbating / 60)>>분
		<br>
		<<if $breastfeedingdisable is "f">>
			마신 모유량: <<print Math.floor($milk_drank_stat)>> mL
			<br>
			모유 생산량: <<print Math.floor($milk_produced_stat)>> mL
			<br>
		<</if>>
		<<if $plantdisable is "f">>
			마신 꿀의 양: <<print Math.floor($nectar_drank_stat)>> mL
			<br>
		<</if>>
		<<if $player.penisExist or $semen_produced_stat>>
			정액 생산량: <<print Math.floor($semen_produced_stat)>> mL
			<br>
		<</if>>
		<<if $player.vaginaExist>>
			애액 생산량: <<print Math.floor($lube_produced_stat)>> mL
			<br>
		<</if>>
		<<if $player.penisExist or $breastfeedingdisable is "f" or $fluid_forced_stat>>
			강제로 짜내진 체액의 양: <<print Math.floor($fluid_forced_stat)>> mL
			<br>
		<</if>>
		<<if $knot_stat isnot undefined>>
			개와 혹으로 연결된 횟수: $knot_stat회
			<br>
		<</if>>
		<<if $sextoystat isnot undefined>>
			다른 이에게 섹스 장난감을 사용한 횟수: $sextoystat회
		<</if>>
		<br>
		<<if $analdoubledisable is "f" and $analdoublestat isnot undefined>>
			항문에 동시삽입한 횟수: $analdoublestat회
			<br>
		<</if>>
		<<if $vaginaldoubledisable is "f" and $vaginaldoublestat isnot undefined>>
			보지에 동시삽입한 횟수: $vaginaldoublestat회
			<br>
		<</if>>
		<<if $watersportsdisable is "f">>
			소변을 뒤집어쓴 횟수: $urinestat회
			<br>
		<</if>>
		<br>
	<</foldout>>

	<<if $gamemode isnot "soft">>
		<<foldout false "_violenceFoldout">>
			<span class="gold">폭력</span>
			성추행: $moleststat번
			<br>
			마지막으로 성추행 당했던 때: <<statisticsTimeCompare $molestTimeStat>>
			<br>
			강간: $rapestat번
			<br>
			마지막으로 강간당했던 때: <<statisticsTimeCompare $rapeTimeStat>>
			<br>
			<<if $bestialitydisable is "f">>
				동물에 의한 강간: $beastrapestat번
				<br>
			<<else>>
				몬스터 사람들에 의한 강간: $beastrapestat번
				<br>
			<</if>>
			<<if $tentacledisable is "f">>
				촉수 괴물에 의한 강간: $tentaclerapestat번
				<br>
			<</if>>
			<<if $voredisable is "f">>
				삼켜진 횟수: $swallowedstat번
				<br>
			<</if>>
			<<if $parasitedisable is "f">>
				기생충의 숙주가 된 횟수: $parasitestat번
				<br>
			<</if>>
			얻어맞음: $hitstat번
			<br>
			때림: $attackstat번
			<br>
			사용한 후추 스프레이 갯수: $spraystat개
			<br>
			<<if C.npc.Eden.init>>
				에덴과 사격연습한 횟수: $stat_shoot번
				<br>
			<</if>>
			망가뜨린 기계: $machine_stat대
			<br>
			<<if $lurkerdisable is "f">>
				잡은 럴커 수: $stat_lurkers_captured마리
				<br><br>
			<</if>>
		<</foldout>>
	<</if>>

	<<foldout false "_datesFoldout">>
		<span class="gold">데이트</span>
		<<if $dateCount.Total lte 0>>
			아직 데이트 하러 간 적이 없다!<br>
		<<else>>
			전체 데이트: $dateCount.Total회
			<br>
			<<if $dateCount.Robin gte 1>>
				로빈과 데이트: $dateCount.Robin회
				<br>
			<</if>>
			<<if $dateCount.Whitney gte 1>>
				휘트니와 데이트: $dateCount.Whitney회
				<br>
			<</if>>
			<<if $dateCount.Kylar gte 1>>
				카일라와 데이트: $dateCount.Kylar회
				<br>
			<</if>>
			<<if $dateCount.Eden gte 1>>
				에덴과 데이트: $dateCount.Eden회
				<br>
			<</if>>
			<<if $dateCount.Avery gte 1>>
				에이버리와 데이트: $dateCount.Avery회
				<br>
			<</if>>
			<<if $dateCount.BlackWolfHunts gte 1>>
				검은 늑대와 사냥: $dateCount.BlackWolfHunts회
				<br>
			<</if>>
			<<if $dateCount.GreatHawkHunts gte 1>>
				거대 매와 사냥: $dateCount.GreatHawkHunts회
				<br>
			<</if>>
			<<if $dateCount.GreatHawkCasual gte 1>>
				거대 매와 일상적으로 한 비행: $dateCount.GreatHawkCasual회
				<br>
			<</if>>
			<<if $dateCount.Alex gte 1>>
				알렉스와 데이트: $dateCount.Alex회
				<br>
			<</if>>
			<<if $dateCount.Sydney gte 1>>
				시드니와 데이트: $dateCount.Sydney회
				<br>
			<</if>>
		<</if>>
		<br>
	<</foldout>>

	<<foldout false "_pregnancyFoldout">>
		<span class="gold">임신</span>
		출산한 총 횟수: <<print playerNormalPregnancyTotal()>>회
		<br>
		<<if $pregnancyStats.playerVirginBirths.length>>
			처녀로 출산한 총 횟수: <<print $pregnancyStats.playerVirginBirths.length>>회
			<br>
		<</if>>
		당신이 낳은 총 아이들 수: <<print $pregnancyStats.playerChildren>>명
		<br>
		당신이 아버지라고 알고 있는 총 아이들 수: <<print $pregnancyStats.npcChildren>>명
		<br>
		당신이 임신했다는 것을 알고 있는 총 일수: <<print Math.floor($pregnancyStats.totalDaysPregnancyKnown)>>일
		<br>
		총 인간 아이들 수: <<print $pregnancyStats.humanChildren>>명
		<br>
		총 늑대 아이들 수: <<print $pregnancyStats.wolfChildren>>마리
		<br>
		총 매의 아이들 수: <<print $pregnancyStats.hawkChildren>>마리
		<br>
		아이들과의 의사소통: <<print $pregnancyStats.childInteractions>>회
		<br>
		<!-- ToDo: Pregnancy - Move outside of commented area when interactions are added
		모유 수유 의사소통: <<print $pregnancyStats.childBreastfedInteractions>>회
		<br>
		젖병 수유 의사소통: <<print $pregnancyStats.childBottlefedInteractions>>회
		<br>
		첫번째 대화 의사소통: <<print $pregnancyStats.childFirstWordInteractions>>회
		<br>
		-->
		고아원에 준 우유병: <<print $pregnancyStats.orphanageMilkBottlesTotal>>병
		<br>
		사후임신약 먹은 횟수: <<print $pregnancyStats.aftermorningpills>>회
		<br>
		임신 테스트 횟수: <<print $pregnancyStats.pregnancyTestsTaken>>번
		<br>
		<<if $player.vaginaExist>>
			질에서 태어난 기생충: <<print $sexStats.vagina.pregnancy.parasiteBirthEvents>>마리
			<br>
		<</if>>
			항문에서 태어난 기생충: <<print $sexStats.anus.pregnancy.parasiteBirthEvents>>마리
		<br><br>
	<</foldout>>

	<<foldout false "_gamblingFoldout">>
		<span class="gold">도박</span>
		플레이한 블랙잭 횟수: $estatePersistent.totalGamesPlayed회
		<br>
		돈을 건 블랙잭 횟수: $estatePersistent.totalGamesPlayedWithBetting회
		<br>
		이긴/진/비긴 블랙잭 라운드 수: $estatePersistent.totalRoundsWon/$estatePersistent.totalRoundsLost/$estatePersistent.totalRoundsTied
		<br>
		(돈을 걸었을 때) 이긴/진/비긴 블랙잭 라운드 수: $estatePersistent.totalBetRoundsWon/$estatePersistent.totalBetRoundsLost/$estatePersistent.totalBetRoundsTied
		<br>
		블랙잭으로 딴 돈: <<printmoney $estatePersistent.totalBetMoneyMade>>
		<br>
		블랙잭으로 잃은 돈: <<printmoney $estatePersistent.totalBetMoneyLost>>
		<br>
		블랙잭에서 몰수당한 돈: <<printmoney $estatePersistent.totalMoneyConfiscated>>
		<br>
		블랙잭에서 받은 팁: <<printmoney $estatePersistent.totalTipMoneyMade>>
		<br>
		속임수 쓰다가 걸린 횟수: $estatePersistent.totalCaughtCheating회
		<br>
		블랙잭에서 연속으로 이긴 최고 횟수: $estatePersistent.winStreakHighScore회
		<<if $blackjack_played gt 0 or $blackjack_won gt 0>>
			<br>
			예전 블랙잭 플레이/이긴 횟수: $blackjack_played/$blackjack_won회
		<</if>>
		<<if $blackjack_streak_high and $blackjack_streak_high gt 0>>
			<br>
			예전 블랙잭에서 연속으로 이긴 최고 횟수: $blackjack_streak_high회
		<</if>>
		<br><br>
	<</foldout>>

	<<foldout false "_moneyFoldout">>
		<span class="gold">Money</span>
		Notes <mouse class="tooltip linkBlue">(?)<span>Adding too many extra colums may make it harder to read on some devices. Many of these were not tracked at all before version '0.5.2.x' and so will be inaccurate.<<if Object.keys($timeStats).length>> Hour rates cannot be easily used to track every state and so most will just be "N/A".<</if>></span></mouse>
		<br>
		<<set [_moneyKeys, _moneyStats, _moneyStatsTotal] to moneyStatsProcess(clone($moneyStats))>>
		<<if $moneyStatsSnapshot?.money>>
			<<set [_moneySnapshotKeys, _moneyStatsSnapshot, _moneyStatsSnapshotTotal] to moneyStatsProcess(clone($moneyStatsSnapshot.money))>>
		<</if>>
		<div id="moneyStatsDiv">
			<<moneyStats>>
		</div>
		<<if $debug is 1>>
			<<link "Reset Stats (Debug)">>
				<<set $moneyStats to {}>>
				<<set $timeStats to {}>>
				<<unset $moneyStatsSnapshot>>
				<<unset _showSnapshot>>
				<<set [_moneyKeys, _moneyStats, _moneyStatsTotal] to moneyStatsProcess(clone($moneyStats))>>
				<<replace "#moneyStatsDiv">><<moneyStats>><</replace>>
			<</link>>
		<</if>>
	<</foldout>>

	<<if $badEndStats.length>>
		<<foldout false "_badEndFoldout">>
			<span class="gold">Bad Ends</span>
			Notes <mouse class="tooltip linkBlue">(?)<span>Adding too many extra colums may make it harder to read on some devices. These were not tracked at all before version '0.5.2.x' and so will be inaccurate. If a bad end stays in progress but you have clearly ended the bad end, please report it as a bug with your save.</span></mouse>
			<br>
			<div id="badEndStatsDiv">
				<<badEndStats>>
			</div>
		<</foldout>>
	<</if>>

	<<foldout false "_miscFoldout">>
		<span class="gold">기타</span>
		<<if $gamemode isnot "soft">>
			구해짐: $rescued번
			<br>
		<</if>>
		옷을 벗겨짐: $clothesstripstat번
		<br>
		옷이 망가짐: $clothesruinstat번
		<br>
		기절함: $passoutstat번
		<br>
		마지막으로 기절했던 때: <<statisticsTimeCompare $passoutTimeStat>>
		<br>
		우수 성적: $distinction_stat회
		<br>
		수면 시간: $sleepStat시간
		<br>
		속옷을 훔친 횟수: $stat_panties_stolen번<<if $locker_suspicion isnot undefined>><br>속옷도둑 의심지수: $locker_suspicion /* 테스트용 */<</if>>
		<br>
		사회봉사 명령을 받은 횟수: $stat_police.community번
		<br>
		공개굴욕형을 받은 횟수:	$stat_police.pillory번
		<br>
		교도소에서 지낸 날짜: $stat_police.prison일
		<br>
		최면에 걸린 횟수: $hypnotised번
		<<if $wraith.possessCount>>
			<br>
			유령에게 지배당한 횟수: $wraith.possessCount번
		<</if>>
		<br>
		빠진 학교 수업: <<print Object.values($schoolLessonsMissed).reduce((x, y) => x + y)>>회
		<mouse class="tooltip linkBlue">(?)<span>이전 버전에서의 계산식은 잘못되어 있어 이 통계는 '0.4.0.0' 버전 이전에서는 부정확할 수 있습니다</span></mouse>
		<br>
		빠진 과학 수업: $schoolLessonsMissed.science회
		<br>
		빠진 수학 수업: $schoolLessonsMissed.maths회
		<br>
		Housekeeping lessons missed: $schoolLessonsMissed.housekeeping
		<br>
		빠진 영어 수업: $schoolLessonsMissed.english회
		<br>
		빠진 역사 수업: $schoolLessonsMissed.history회
		<br>
		빠진 수영 수업: $schoolLessonsMissed.swimming회
		<br>
		<<if $earSlimeDaysStat>>
			귓속 슬라임과 함께한 기간: $earSlimeDaysStat일
			<br>
		<</if>>
		<<if $earSlime.days>>
			현재의 귓속 슬라임과 함께한 기간: $earSlime.days일
			<br>
		<</if>>
		<<if $earSlimePassiveDaysStat>>
			수동적인 귓속 슬라임과 함께한 기간: $earSlimePassiveDaysStat일
			<br>
		<</if>>
		<<if $whitney_smoke gte 1>>
			피운 담배 수: $whitney_smoke개비
			<br>
		<</if>>
		<<if $bird and $bird.lurkersEaten>>
			먹은 럴커 수: $bird.lurkersEaten마리
			<br>
		<</if>>
		Total paid to Bailey: <<printmoney `$moneyStats.baileyRent?.spent or 0`>>
		<mouse class="tooltip linkBlue">(?)<span>'0.4.5.X' 버전 및 그 이전의 내용은 포함되지 않습니다</span></mouse>
		<br>
		<<if $baileyRefusedToPayTotal>>
			베일리에게 지불하지 않은 총 금액: <<printmoney $baileyRefusedToPayTotalStat "red">>
			<mouse class="tooltip linkBlue">(?)<span>'0.4.5.X' 버전 및 그 이전의 내용은 포함되지 않습니다</span></mouse>
			<br>
		<</if>>
		<br>
	<</foldout>>


	<<foldout false "_saveFoldout">>
		<span class="gold">게임 세이브 상세</span>
		<<if $passageCount>>
			총 경로(passage) 횟수: $passageCount
			<mouse class="tooltip linkBlue">(?)<span>새 경로가 로드된 총 횟수 (대부분의 경우 링크를 눌렀을 때 바뀜). 설정 같은 특수 경로는 포함되지 않습니다. '0.3.12.X' 및 그 이전 버전에서의 경로는 확인이 불가능합니다</span></mouse>
			<br>
		<</if>>
		<<if $passageChangesCount>>
			총 경로(passage)가 바뀐 횟수: $passageChangesCount
			<mouse class="tooltip linkBlue">(?)<span>새 경로가 바뀐 총 횟수 (대부분의 경우 링크를 눌렀을 때 바뀜). 설정 같은 특수 경로는 포함되지 않습니다. '0.3.12.X' 및 그 이전 버전에서의 경로는 확인이 불가능합니다</span></mouse>
			<br>
		<</if>>
		<<if $saveDetails isnot undefined>>
			일반 저장 횟수: <<print $saveDetails.slot.count>>
			<br>
			내보낸 저장 횟수: <<print $saveDetails.exported.count>>
			<br>
			자동 저장 횟수: <<print $saveDetails.auto.count>>
			<br>
			로드한 횟수: <<print $saveDetails.loadCount || 0>>
			<mouse class="tooltip linkBlue">(?)<span>세이브가 로드된 총 횟수이며, 같은 세이브에서의 반복적인 로드는 계산되지 않습니다. '0.3.12.X' 및 그 이전 버전에서의 횟수는 확인이 불가능합니다</span></mouse>
			<br>
			플레이 시간: <<print msToTime(($saveDetails.playTime ? $saveDetails.playTime : 0) + ($saveDetails.loadTime ? new Date() - $saveDetails.loadTime : 0))>>
			<mouse class="tooltip linkBlue">(?)<span>'h:mm:ss'양식으로 표시됩니다. 게임을 켜 둔 채로 몇 시간 방치했다가, 저장하면 그 시간까지 계산되므로 주의하세요. 이를 방지하려면, 게임 플레이를 끝내기 전에 저장하고 플레이를 재개할 때 로드하세요. '0.3.13.X' 및 그 이전 버전에서의 시간은 확인이 불가능합니다</span></mouse>
			<br>
		<</if>>
		<<if $saveVersions isnot undefined>>
			__세이브에 저장되었던 게임 버전__
			<br>
			<<for _i to 0; _i lt $saveVersions.length; _i++>>
				<<if _i gt 0>>
					<<if $saveVersions[_i].split(".")[2] is $saveVersions[_i - 1].split(".")[2]>>
						--
					<<else>>
						<br>
					<</if>>
				<</if>>
				$saveVersions[_i]
			<</for>>
			<br>
		<</if>>
		<<if $saveVersion>>
			세이브가 로드된 버전: $saveVersion
		<</if>>
	<</foldout>>
<</widget>>

<<widget "extraStatisticsWarning">>
	<<if $options.skipStatisticsConfirmation is undefined>><<set $options.skipStatisticsConfirmation to false>><</if>>

	<h3>추가 통계</h3>

	<div id="spoilerWarning">
		정말로 확인하시겠습니까? 스포일러가 포함되어 있을 수도 있어요!
		<br>
		<<link "네">>
			<<replace #customOverlayContent>><<extraStatistics>><</replace>>
		<</link>>
		&nbsp;&nbsp;&nbsp;<label><<checkbox "$options.skipStatisticsConfirmation" false true autocheck>> 이 경고를 다시 보여주지 마세요</label>
		<!-- ignore the nbsp's, they're just for formatting -->
	</div>
<</widget>>

<<widget "extraStatistics">>
	<div id="spoilerWarningConfirmed">
		<<foldout false "_stateFoldout">>
			<span class="gold">상태</span>
			고통: <<print Math.trunc($pain)>>
			<br>
			흥분: <<print Math.trunc($arousal)>>
			<br>
			피로: <<print Math.trunc($tiredness)>>
			<br>
			스트레스: <<print Math.trunc($stress)>>
			<br>
			트라우마: <<print Math.trunc($trauma)>>
			<br>
			통제력: <<print Math.trunc($control)>>
			<br>
			색기: <<print Math.trunc($allure)>>
			<br>
			취기: <<print Math.trunc($drunk)>>
			<br>
			약물: <<print Math.trunc($drugged)>>
			<br>
			환각: <<print Math.trunc($hallucinogen)>>
			<br><br>
		<</foldout>>

		<<foldout false "_charFoldout">>
			<span class="gold">캐릭터 정보</span>
			순결도: <<print Math.trunc($purity)>>
			<br>
			용모: <<print Math.trunc($beauty)>>
			<br>
			신체 능력: <<print Math.trunc($physique)>>
			<br>
			의지력: <<print Math.trunc($willpower)>>
			<br>
			성지식: <<print Math.trunc($awareness)>>
			<br>
			음란도: <<print Math.trunc($promiscuity)>>
			<br>
			노출증: <<print Math.trunc($exhibitionism)>>
			<br>
			이상성욕: <<print Math.trunc($deviancy)>>
			<br>
			오염도: <<print Math.trunc($earSlime.corruption)>>
			<br>
			<<if $earSlime.growth>>
				귀 슬라임 성장도: <<print Math.trunc($earSlime.growth)>>
				<br>
			<</if>>
			<<if $temple_rank is "initiate" or $temple_rank is "monk" or $temple_rank is "priest">>
				신앙심: <<print Math.trunc($grace)>>
				<br>
			<</if>>
			순종도: <<print Math.trunc($submissive)>>
			<br>
			마조히즘: <<print Math.trunc($masochism)>>
			<br>
			새디즘: <<print Math.trunc($sadism)>>
			<br>
			크로스드레서 진행:
			<<if $crossdressingTrait isnot undefined>>
				<<print Math.trunc($crossdressingTrait)>> %
			<<else>>
				0
			<</if>>
			<br><br>
			민감도:
			<mouse class="tooltip linkBlue">(?)<span>이것은 해당 부위가 자극을 받았을 때 오르는 흥분도의 배율입니다.</span></mouse>
			<ul style="margin-top:0px;margin-left:-5px;">
				<li>입: <<print $mouthsensitivity.toFixed(2)>></li>
				<li>가슴: <<print $breastsensitivity.toFixed(2)>></li>
				<li>성기: <<print $genitalsensitivity.toFixed(2)>></li>
				<li>엉덩이: <<print $bottomsensitivity.toFixed(2)>></li>
			</ul>
			유방 성장 진행률: <<print Math.trunc(100 - ($breastgrowthtimer / 10))>>%
			<mouse class="tooltip linkBlue">(?)<span>100%나 그 이상에 도달하면 성장하며, 0%나 그 이하에 도달하면 수축합니다.</span></mouse>
			<br>
			유방이 커질 수 있음: <<print ($player.breastsize lt $breastsizemax ? "네" : "아니오")>>
			<<if $player.breastsize is $breastsizemax>>
				<mouse class="tooltip linkBlue">(?)<span>최대 크기입니다.</span></mouse>
			<</if>>
			<br>
			유방이 작아질 수 있음: <<print ($player.breastsize gt $breastsizemin ? "네" : "아니오")>>
			<<if $player.breastsize is $breastsizemin>>
				<mouse class="tooltip linkBlue">(?)<span>최소 크기입니다.</span></mouse>
			<</if>>
			<br>
			젖분비: <<print ($lactating is 1 ? "네" : "아니오")>>
			<br>
			<<if $lactating is 1>>
				모유량: <<print Math.trunc($milk_amount)>>
				<br>
				모유 생산량: <<print Math.trunc($milk_volume)>>
				<br>
			<</if>>
			<<if $player.penisExist>>
				<<if $player.penissize gte -1>>
					<<set $_penisGrowthMin to 0>>
				<<else>>
					<<set $_penisGrowthMin to -400>>
				<</if>>
				<<if $player.penissize gt 0>>
					<<set $_penisGrowthMax to 1000>>
				<<elseif $player.penissize is 0>>
					<<set $_penisGrowthMax to 1200>>
				<<else>>
					<<set $_penisGrowthMax to 1500>>
				<</if>>
				<<set $_penisgrowthtimer to $penisgrowthtimer>>
				<<if $_penisGrowthMin lt 0>>
					<<set $_penisGrowthMax -= $_penisGrowthMin>>
					<<set $_penisgrowthtimer -= $_penisGrowthMin>>
				<</if>>
				<br>
				음경 성장 진행률: <<print Math.trunc(100 - ($_penisgrowthtimer / $_penisGrowthMax * 100))>>%
				<mouse class="tooltip linkBlue">(?)<span>100%나 그 이상에 도달하면 성장하며, 0%나 그 이하에 도달하면 수축합니다.</span></mouse>
				<br>
				<<if $sexStats && $sexStats.pills>>
					음경이 커질 수 있음: <<print ($player.penissize lt $penissizemax and ($player.penissize gte -1 or $sexStats.pills["pills"]["penis growth"].overdose - $sexStats.pills["pills"]["penis reduction"].overdose - ($worn.genitals.type.includes("shrinking") ? 20 : 0) gte 20)? "네" : "아니오")>>
					<<if $player.penissize is -2 and $sexStats.pills["pills"]["penis growth"].overdose - $sexStats.pills["pills"]["penis reduction"].overdose - ($worn.genitals.type.includes("shrinking") ? 20 : 0) lt 20>>
						<mouse class="tooltip linkBlue">(?)<span>음경 성장약을 과다복용하거나 자지에 성게형 기생충을 기생시킬 필요가 있습니다.</span></mouse>
					<<elseif $player.penissize is $penissizemax>>
						<mouse class="tooltip linkBlue">(?)<span>최대 크기입니다.</span></mouse>
					<</if>>
					<br>
					음경이 작아질 수 있음: <<print ($player.penissize gt $penissizemin and ($player.gender isnot "f" or $player.penissize gt 0) and ($player.penissize gte 0 or $sexStats.pills["pills"]["penis growth"].overdose - $sexStats.pills["pills"]["penis reduction"].overdose - ($worn.genitals.type.includes("shrinking") ? 20 : 0) lte -20)? "네" : "아니오")>>
					<<if $player.gender is "f" && $player.penissize is 0>>
						<mouse class="tooltip linkBlue">(?)<span>기생충 자지의 최소 크기입니다.</span></mouse>
					<<elseif $player.penissize is -1 and $sexStats.pills["pills"]["penis growth"].overdose - $sexStats.pills["pills"]["penis reduction"].overdose - ($worn.genitals.type.includes("shrinking") ? 20 : 0) gt -20>>
						<mouse class="tooltip linkBlue">(?)<span>음경 축소약을 과다복용하거나 음경에 슬라임 기생충을 기생시킬 필요가 있습니다.</span></mouse>
					<<elseif $player.penissize is $penissizemin>>
						<mouse class="tooltip linkBlue">(?)<span>최소 크기입니다.</span></mouse>
					<</if>>
					<br>
				<</if>>
				정액량: <<print Math.trunc($semen_amount)>>
				<br>
				정액 생산량: <<print Math.trunc($semen_volume)>>
				<br>
			<</if>>
			<br>
			엉덩이 성장 진행률: <<print Math.trunc(100 - ($bottomgrowthtimer / 10))>>%
			<mouse class="tooltip linkBlue">(?)<span>100%나 그 이상에 도달하면 성장하며, 0%나 그 이하에 도달하면 수축합니다.</span></mouse>
			<br>
			엉덩이가 커질 수 있음: <<print ($player.bottomsize lt $bottomsizemax ? "네" : "아니오")>>
			<<if $player.bottomsize is $bottomsizemax>>
				<mouse class="tooltip linkBlue">(?)<span>최대 크기입니다.</span></mouse>
			<</if>>
			<br>
			엉덩이가 작아질 수 있음: <<print ($player.bottomsize gt $bottomsizemin ? "네" : "아니오")>>
			<<if $player.bottomsize is $bottomsizemin>>
				<mouse class="tooltip linkBlue">(?)<span>최소 크기입니다.</span></mouse>
			<</if>>
			<br><br>
		<</foldout>>

		<<foldout false "_clothesFoldout">>
			<span class="gold">옷</span>
			<<if $worn.upper.name isnot "naked">>
				상의 젖은 정도: <<print Math.trunc($upperwet)>>
				<br>
				상의 내구도: <<print Math.trunc($worn.upper.integrity)>>
				<br>
			<</if>>
			<<if $worn.lower.name isnot "naked">>
				하의 젖은 정도: <<print Math.trunc($lowerwet)>>
				<br>
				하의 내구도: <<print Math.trunc($worn.lower.integrity)>>
				<br>
			<</if>>
			<<if $worn.under_upper.name isnot "naked">>
				속옷 상의 젖은 정도: <<print Math.trunc($underupperwet)>>
				<br>
				속옷 상의 내구도: <<print Math.trunc($worn.under_upper.integrity)>>
				<br>
			<</if>>
			<<if $worn.under_lower.name isnot "naked">>
				속옷 하의 젖은 정도: <<print Math.trunc($underlowerwet)>>
				<br>
				속옷 하의 내구도: <<print Math.trunc($worn.under_lower.integrity)>>
				<br>
			<</if>>
			<<if $worn.genitals.name isnot "naked">>
				<<trClothes "genitals" setup.clothes.genitals[clothesIndex('genitals',$worn.genitals)].name "name">>_trResult 내구도: <<print Math.trunc($worn.genitals.integrity)>>
				<br>
			<</if>>
			<br>
		<</foldout>>

		<<foldout false "_socialFoldout">>
			<span class="gold">관계</span>
			학교 평판: <<print Math.trunc($cool)>>
			<br>
			불량도: <<print Math.trunc($delinquency)>>
			<br>
			징계: <<print Math.trunc($detention)>>
			<br>
			범죄: <<print Math.trunc(crimeSumCurrent())>>
			<br>
			고아원 희망: <<print Math.trunc($orphan_hope)>>
			<br>
			고아원 반항: <<print Math.trunc($orphan_reb)>>
			<br>
			<<if $dockwork is 2>>
				부두 평판: <<print Math.trunc($dockstatus)>>
				<br>
			<</if>>
			<<if $pound and $pound.progress gte 1>>
				Stray dog contentment: <<print Math.trunc($stray_happiness)>>
				<br>
			<</if>>
			섹스 명성: <<print Math.trunc($fame.sex)>>
			<br>
			매춘 명성: <<print Math.trunc($fame.prostitution)>>
			<br>
			강간 명성: <<print Math.trunc($fame.rape)>>
			<br>
			수간 명성: <<print Math.trunc($fame.bestiality)>>
			<br>
			노출 명성: <<print Math.trunc($fame.exhibitionism)>>
			<br>
			임신 명성: <<print Math.trunc($fame.pregnancy)>>
			<br>
			수태 명성: <<print Math.trunc($fame.impreg)>>
			<br>
			전투 명성: <<print Math.trunc($fame.scrap)>>
			<br>
			친절 명성: <<print Math.trunc($fame.good)>>
			<br>
			비즈니스 명성: <<print Math.trunc($fame.business)>>
			<br>
			<<if $debug is 1>>
				포주 명성: <<print Math.trunc($fame.pimp)>>
				<br>
			<</if>>
			사교 명성: <<print Math.trunc($fame.social)>>
			<br>
			모델 명성: <<print Math.trunc($fame.model)>>
			<br>
			섬사람 언어: <<if $islander_language is undefined>>0<<else>><<print Math.trunc($islander_language)>><</if>>
			<br><br>
		<</foldout>>

		<<foldout false "_crimeFoldout">>
			<span class="gold">범죄</span>
			<<for $_cr range Object.keys(setup.crimeNames)>>
				<<foldout false $_cr>>
					<span class="gold"><<trCrimeName `setup.crimeNames[$_cr]`>><<print toTitleCase(_trResult) + ":">></span>
					<<print "현재: " + Math.trunc($crime[$_cr].current)>>
					<br>
					<<print "이력: " + Math.trunc($crime[$_cr].history)>>
					<br>
					<<print "매일: " + Math.trunc($crime[$_cr].daily)>>
					<br>
					<<print "횟수: " + Math.trunc($crime[$_cr].count)>>
					<br>
					<<print "횟수 이력: " + Math.trunc($crime[$_cr].countHistory)>>
					<br>
				<</foldout>>
			<</for>>
			<<foldout false "_crimeTotalsFoldout">>
				<span class="gold">총계:</span>
				<<print "현재: " + crimeSumCurrent()>>
				<br>
				<<print "이력: " + crimeSumHistory()>>
				<br>
				<<print "매일: " + crimeSumDaily()>>
				<br>
				<<print "횟수: " + crimeSumCount()>>
				<br>
				<<print "횟수 이력: " + crimeSumCountHistory()>>
				<br>
			<</foldout>>
			<<foldout false "_crimeEventsFoldout">>
				<span class="gold">범죄 이벤트:</span>
				<span id="statscrimeevents"><<listCrimeCheats>></span>
				<br>
			<</foldout>>
		<</foldout>>

		<<foldout false "_transformationFoldout">>
			<span class="gold">변신</span>
			늑대 특성: <<print Math.trunc($wolfbuild)>> (30+ 으로 완전 변신)
			<br>
			늑대 징후: <<print Math.trunc($wolfgirl)>>
			<br>
			고양이 특성: <<print Math.trunc($catbuild)>> (50+ 으로 완전 변신)
			<br>
			고양이 징후: <<print Math.trunc($cat)>>
			<br>
			소 특성: <<print Math.trunc($cowbuild)>> (30+ 으로 완전 변신)
			<br>
			소 징후: <<print Math.trunc($cow)>>
			<br>
			<<if $hallucinations gte 2 or $bestialitydisable is "t">>하피 특성<<else>>새 특성<</if>>: <<print Math.trunc($birdbuild)>> (30+ 으로 완전 변신)
			<br>
			<<if $hallucinations gte 2 or $bestialitydisable is "t">>하피<<else>>새<</if>> 징후: <<print Math.trunc($harpy)>>
			<br>
			여우 특성: <<print Math.trunc($foxbuild)>> (30+ 으로 완전 변신)
			<br>
			여우 징후: <<print Math.trunc($fox)>>
			<br>
			천사 특성: <<print Math.trunc($angelbuild)>> (50+ 으로 완전 변신)
			<br>
			천사 징후: <<print Math.trunc($angel)>>
			<br>
			악마 특성: <<print Math.trunc($demonbuild)>> (30+ 으로 완전 변신)
			<br>
			악마 징후: <<print Math.trunc($demon)>>
			<br>
			타천사 징후:
			<<print ($fallenangel is undefined ? 0 : Math.trunc($fallenangel))>>
			<br>
			타천사 면죄: <<print Math.trunc($fallenbuild)>> (30+ 으로 면죄)
			<br><br>
		<</foldout>>

		<<foldout false "_parasitePregnancyFoldout">>
			<span class="gold">기생충 임신</span>
			<<set $_aPregnancy to $sexStats.anus.pregnancy>>
			<<if $_aPregnancy.type is "parasite" or $_aPregnancy.type is null>>
				<<for _i to 0; _i lt maxParasites("anus"); _i++>>
					<<if $_aPregnancy.fetus[_i] isnot undefined>>
						<<if $_aPregnancy.fetus[_i].fertilised>>
							항문 슬롯 <<=_i+1>>에는 <<putpost $_aPregnancy.fetus[_i].stats.gender>> <<trCreature "all" $_aPregnancy.fetus[_i].creature "이">>_trResult 임신되어 있다.
							<<if $_aPregnancy.fetus[_i].stats.gender is "Hermaphrodite">>
								<<if $pregnancyStats.parasiteDoctorEvents gte 4 and $_aPregnancy.fetus[_i].daysLeft is 0>>
									의사 하퍼가 곧 당신의 출산을 도울 수 있을 것이다.
								<<elseif $pregnancyStats.parasiteDoctorEvents gte 4>>
									의사 하퍼가 <<=$_aPregnancy.fetus[_i].daysLeft>>일 내에 당신의 출산을 도울 수 있을 것이다.
								<<else>>
									출산하기 위해 당신은 의사 하퍼를 만날 필요가 있다.
								<</if>>
							<<else>>
								<<if $_aPregnancy.fetus[_i].daysLeft is 0>>
									곧 출산할 수 있게 될 것이다.
								<<else>>
									<<=$_aPregnancy.fetus[_i].daysLeft>>일 내에 출산할 수 있게 될 것이다.
								<</if>>
							<</if>>
							<br>
						<<else>>
							항문 슬롯 <<=_i+1>>에는 <<putpost $_aPregnancy.fetus[_i].stats.gender>> <<trCreature "all" $_aPregnancy.fetus[_i].creature "의">>_trResult 알이 있으며 수정이 가능하다.<br>
						<</if>>
					<<else>>
						항문 슬롯 <<=_i+1>>에는 현재 아무것도 없다.<br>
					<</if>>
				<</for>>
			<<else>>
				<<if getPregnancyObject().awareOf>>
					다른 종류의 항문 임신을 하고 있어 기생충의 숙주가 될 수가 없다.
				<<else>>
					<<for _i to 0; _i lt maxParasites("anus"); _i++>>
						항문 슬롯 <<=_i+1>>에는 현재 아무것도 없다.<br>
					<</for>>
				<</if>>
			<</if>>
			<<set $_vPregnancy to $sexStats.vagina.pregnancy>>
			<<if $player.vaginaExist>>
				<<if $_vPregnancy.type is "parasite" or $_vPregnancy.type is null>>
					<<for _i to 0; _i lt maxParasites("vagina"); _i++>>
						<<if $_vPregnancy.fetus[_i] isnot undefined>>
							<<if $_vPregnancy.fetus[_i].fertilised>>
								Vaginal slot <<=_i+1>> is pregnant with a $_vPregnancy.fetus[_i].stats.gender $_vPregnancy.fetus[_i].creature.
								<<if $_vPregnancy.fetus[_i].stats.gender is "Hermaphrodite">>
									<<if $pregnancyStats.parasiteDoctorEvents gte 4 and $_vPregnancy.fetus[_i].daysLeft is 0>>
										의사 하퍼가 곧 당신의 출산을 도울 수 있을 것이다.
									<<elseif $pregnancyStats.parasiteDoctorEvents gte 4>>
										의사 하퍼가 <<=$_vPregnancy.fetus[_i].daysLeft + 1>>일 내에 당신의 출산을 도울 수 있을 것이다.
									<<else>>
										출산하기 위해 당신은 의사 하퍼를 만날 필요가 있다.
									<</if>>
								<<else>>
									<<if $_vPregnancy.fetus[_i].daysLeft is 0>>
										곧 출산할 수 있게 될 것이다.
									<<else>>
										<<=$_vPregnancy.fetus[_i].daysLeft>>일 내에 출산할 수 있게 될 것이다.
									<</if>>
								<</if>>
								<br>
							<<else>>
								Vaginal slot <<=_i+1>> has a $_vPregnancy.fetus[_i].stats.gender $_vPregnancy.fetus[_i].creature egg ready to be fertilised.<br>
							<</if>>
						<<else>>
							Vaginal slot <<=_i+1>> is empty.<br>
						<</if>>
					<</for>>
				<<else>>
					<<if getPregnancyObject().awareOf>>
						다른 종류의 질 임신을 하고 있어 기생충의 숙주가 될 수가 없다.
					<<else>>
						<<for _i to 0; _i lt maxParasites("vagina"); _i++>>
							Vaginal slot <<=_i+1>> is empty.<br>
						<</for>>
					<</if>>
				<</if>>
			<</if>>
			<br>
		<</foldout>>
		<<set $_menstruation to $sexStats.vagina.menstruation>>
		<<if $cycledisable is "f">>
			<<foldout false "_menstruationFoldout">>
				<span class="gold">월경 주기</span>
				진행중: <<print $_menstruation.running ? "네" : "아니오">>
				<<if $_menstruation.running>>
					<br>
					주기 내의 현재 일자: <<print $_menstruation.currentDay>>일
					<br>
					주기의 마지막 날: <<print $_menstruation.currentDaysMax>>일
					<br>
					가장 위험한 날들: <<print $_menstruation.stages[2]>>일간
					<br>
				<</if>>
				<br>
			<</foldout>>
		<</if>>
		<<foldout false "_extraPregnancyFoldout">>
			<span class="gold">임신</span>
			/* Previously commented out for being a major spoil, but caused players to think a bug had occured */
			임신중이었던 총 일수: <<print Math.floor($pregnancyStats.totalDaysPregnant)>>일
			<br>
			임신 사실을 알고 있던 총 일수: <<print Math.floor($pregnancyStats.totalDaysPregnancyKnown)>>일
			<br>
			<<if canBeMPregnant()>>
			<<elseif !$player.vaginaExist or !$_menstruation.running>>
				현재는 임신할 수 없다.
			<<elseif $_vPregnancy.type is "parasite">>
				자궁 내의 기생충 때문에 일반적인 임신을 할 수 없다.
			<<elseif $_menstruation.currentState is "recovering">>
				마지막 임신한 후로 이렇게 금방 새로 임신할 수 없다.
			<<elseif $_vPregnancy.type isnot null>>
				현재 임신한 아기: <<print $_vPregnancy.fetus.length>>명
					<<extraStatisticsPregnancyType $_vPregnancy.type>>
				<br>
				<<set $_days to pregnancyDaysEta($_vPregnancy)>>
				<<if $_days lt 1>>
					예정: 언제든.
				<<elseif $_days>>
					예정: <<print $_days>>일 후<<if $_days isnot 1>><</if>>.
				<</if>>
				<br>
			<<else>>
				현재 임신하지 않았다.
				<br>
				<<if $pregnancytype is "realistic">>
					<<set [_trackedNPCs, _spermArray] to spermObjectToArray($sexStats.vagina.sperm, true, true)>>
					당신을 임신시킬 수 있는 정액의 출처 수: <<print _spermArray.length>>.
					<<if _trackedNPCs.length>>
						<br>
						현재 당신 안에 있는 정액의 출처:
						<ul>
							<<for _name range _trackedNPCs>>
								<<set $_count to _spermArray.filter(s => s.source === T.name.source).length>>
								<li>
									<<print pregnancyNameCorrection(_name.source)>>
									<<if $_count gt 1>>
										(x<<print $_count>>)
									<</if>>
								</li>
							<</for>>
						</ul>
					<</if>>
				<</if>>
			<</if>>
			<<if canBeMPregnant()>>
				<<if $_aPregnancy.type is "parasite">>
					자궁 내의 기생충 때문에 일반적인 임신을 할 수 없다.
				<<elseif !$_menstruation.running>>
					현재는 임신할 수 없다.
				<<elseif $_menstruation.currentState is "recovering">>
					마지막 임신한 후로 이렇게 금방 새로 임신할 수 없다.
				<<elseif $_aPregnancy.type isnot null>>
					현재 임신한 아기: <<print $_aPregnancy.fetus.length>>명
					<<extraStatisticsPregnancyType $_aPregnancy.type>>
					<br>
					<<set $_days to pregnancyDaysEta($_aPregnancy)>>
					<<if $_days lt 1>>
						예정: 언제든.
					<<elseif $_days>>
						예정: <<print $_days>>일 후<<if $_days isnot 1>><</if>>.
					<</if>>
					<br>
				<<else>>
					현재 임신하지 않았다.
					<br>
					<<if $pregnancytype is "realistic">>
						<<set [_trackedNPCs, _spermArray] to spermObjectToArray($sexStats.anus.sperm, true, true)>>
						당신을 임신시킬 수 있는 정액의 출처 수: <<print _spermArray.length>>.
						<<if _trackedNPCs.length>>
							<br>
							현재 당신 안에 있는 정액의 출처:
							<ul>
								<<for _name range _trackedNPCs>>
									<<set $_count to _spermArray.filter(s => s.source === T.name.source).length>>
									<li>
										<<print pregnancyNameCorrection(_name.source)>>
										<<if $_count gt 1>>
											(x<<print $_count>>)
										<</if>>
									</li>
								<</for>>
							</ul>
						<</if>>
					<</if>>
				<</if>>
			<</if>>
		<</foldout>>
		<<if $NPCName.find(npc => npc.pregnancy and npc.pregnancy.enabled isnot undefined)>>
			<<foldout false "_npcPregnancyFoldout">>
				<span class="gold">NPC 임신</span>
				<<for $_npc range $NPCName.filter(npc => npc.pregnancy and npc.pregnancy.enabled isnot undefined)>>
					<div>
						<<trNamedNPC $_npc.nam>><<print _trResult>>:
						<<if !$_npc.pregnancy.enabled and !$_npc.pregnancy.fetus.length>>
							플레이어에 의해 NPC 임신은 비활성화되어 있다.
						<<elseif !$_npc.pregnancy.fetus.length>>
							임신하지 않았다.
						<<elseif $_npc.pregnancy.fetus.length>>
							현재 임신한 아기 <<print $_npc.pregnancy.fetus.length>>명
							<<extraStatisticsPregnancyType $_npc.pregnancy.type>>
							<<set $_days to pregnancyDaysEta($_npc.pregnancy)>>
							<<if $_days lt 1>>
								예정: 언제든.
							<<elseif $_days>>
								예정: <<print $_days>>일 후<<if $_days isnot 1>><</if>>.
							<</if>>
						<</if>>
					</div>
				<</for>>
			<</foldout>>
		<</if>>
	</div>
<</widget>>

<<widget "extraStatisticsPregnancyType">>
	<<switch _args[0]>>
		<<case "human">>일반 아기들.
		<<case "wolf">>늑대 강아지들.
		<<case "hawk">>매의 알들.
	<</switch>>
<</widget>>

<<widget "statisticsTimeCompare">><<silently>>
	<<if $statFreeze is true>>
		<<set $_text_output to "Not avaliable when stats are being frozen">>
	<<elseif $args[0]>>
		<<set _difference to new DateTime($args[0]).compareWith($args[1] or Time.date)>>
		<<set $_text_output to "">>
		<<if _difference.years>>
			<<set $_text_output += `${_difference.years} 년${_difference.years gt 1 ? "" : ""}`>>
		<</if>>
		<<if _difference.months>>
			<<if $_text_output>><<set $_text_output += ", ">><</if>>
			<<set $_text_output += `${_difference.months} 개월${_difference.months gt 1 ? "" : ""}`>>
		<</if>>
		<<if _difference.days>>
			<<if $_text_output>><<set $_text_output += ", ">><</if>>
			<<set $_text_output += `${_difference.days} 일${_difference.days gt 1 ? "" : ""}`>>
		<</if>>
		<<if _difference.hours>>
			<<if $_text_output>><<set $_text_output += ", ">><</if>>
			<<set $_text_output += `${_difference.hours} 시간${_difference.hours gt 1 ? "" : ""}`>>
		<</if>>
		<<if _difference.minutes>>
			<<if $_text_output>><<set $_text_output += ", ">><</if>>
			<<set $_text_output += `${_difference.minutes} 분${_difference.minutes gt 1 ? "" : ""}`>>
		<</if>>
		<<if $args[1] and !$_text_output>>
			<<set $_text_output += "no difference">>
		<<elseif !$_text_output>>
			<<set $_text_output += "최근">>
		<<else>>
			<<set $_text_output += " 전">>
		<</if>>
	<<else>>
		<<set $_text_output to "그런 적 없음">>
	<</if>>
<</silently>><<if $_text_output>><<print $_text_output>><</if>>
<</widget>>

<<widget "moneyStats">>
	<<set $_moneyStats to (_showSnapshot is "show" ? clone(_moneyStatsSnapshot) : clone(_moneyStats))>>
	<<set $_moneyKeys to (_showSnapshot is "show" ? clone(_moneySnapshotKeys) : clone(_moneyKeys))>>
	<<set $_moneyTotal to (_showSnapshot is "show" ? clone(_moneyStatsSnapshotTotal) : clone(_moneyStatsTotal))>>
	<<link `$moneyStatsSnapshot ? "Re-create Snapshot" : "Create Snapshot"`>>
		<<set $moneyStatsSnapshot to {
			date: Time.date.timeStamp,
			money: clone(V.moneyStats),
			time: clone(V.timeStats),
		}>>
		<<set [_moneySnapshotKeys, _moneyStatsSnapshot, _moneyStatsSnapshotTotal] to moneyStatsProcess(clone($moneyStatsSnapshot.money))>>
		<<replace "#moneyStatsDiv">><<moneyStats>><</replace>>
	<</link>>
	<<if $moneyStatsSnapshot>>
		| <<link "Clear Snapshot">>
			<<unset $moneyStatsSnapshot>>
			<<unset _showSnapshot>>
			<<replace "#moneyStatsDiv">><<moneyStats>><</replace>>
		<</link>>
	<</if>>
	<br><br>
	<<link `_moneyStatsDetailed ? "Reduce details" : "Expand details"`>>
		<<set _moneyStatsDetailed to !_moneyStatsDetailed>>
		<<set [_moneyKeys, _moneyStats, _moneyStatsTotal] to moneyStatsProcess(clone($moneyStats))>>
		<<if $moneyStatsSnapshot?.money>>
			<<set [_moneySnapshotKeys, _moneyStatsSnapshot, _moneyStatsSnapshotTotal] to moneyStatsProcess(clone($moneyStatsSnapshot.money))>>
		<</if>>
		<<replace "#moneyStatsDiv">><<moneyStats>><</replace>>
	<</link>> |
	<span @class="_moneyStatsCount ? 'goldLink' : ''">
		<<link `_moneyStatsCount ? "Hide Counts" : "Show Counts"`>>
			<<set _moneyStatsCount to !_moneyStatsCount>>
			<<if !_moneyStatsCount and _moneyStatsSorting?.includes("Count")>><<unset _moneyStatsSorting>><</if>>
			<<replace "#moneyStatsDiv">><<moneyStats>><</replace>>
		<</link>>
	</span> |
	<span @class="_moneyStatsAverages ? 'goldLink' : ''">
		<<link `_moneyStatsAverages ? "Hide Averages" : "Show Averages"`>>
			<<set _moneyStatsAverages to !_moneyStatsAverages>>
			<<if !_moneyStatsAverages and _moneyStatsSorting?.includes("Average")>><<unset _moneyStatsSorting>><</if>>
			<<replace "#moneyStatsDiv">><<moneyStats>><</replace>>
		<</link>>
	</span> |
	<span @class="_moneyStatsDate ? 'goldLink' : ''">
		<<link `_moneyStatsDate ? "Hide Dates" : "Show Dates"`>>
			<<set _moneyStatsDate to !_moneyStatsDate>>
			<<if !_moneyStatsDate and _moneyStatsSorting?.includes("Date")>><<unset _moneyStatsSorting>><</if>>
			<<replace "#moneyStatsDiv">><<moneyStats>><</replace>>
		<</link>>
	</span> |
	<<if Object.keys($timeStats).length>>
		<span @class="_moneyStatsHourRates ? 'goldLink' : ''">
			<<link `_moneyStatsHourRates ? "Hide Hour Rates" : "Show Hour Rates"`>>
				<<set _moneyStatsHourRates to !_moneyStatsHourRates>>
				<<if !_moneyStatsHourRates and _moneyStatsSorting?.includes("Hour Rates")>><<unset _moneyStatsSorting>><</if>>
				<<replace "#moneyStatsDiv">><<moneyStats>><</replace>>
			<</link>>
		</span>
	<</if>>
	<<if $moneyStatsSnapshot>>
		||
		<span @class="_showSnapshot is 'show' ? 'goldLink' : ''">
			<<link `_showSnapshot is "show" ? "Hide Snapshot" : "Show Snapshot"`>>
				<<if _showSnapshot is "show">>
					<<unset _showSnapshot>>
				<<else>>
					<<set _showSnapshot to "show">>
				<</if>>
				<<replace "#moneyStatsDiv">><<moneyStats>><</replace>>
			<</link>>
		</span>
		|
		<span @class="_showSnapshot is 'compare' ? 'goldLink' : ''">
			<<link `_showSnapshot is "compare" ? "Hide Snapshot" : "Compare Snapshot"`>>
				<<if _showSnapshot is "compare">>
					<<unset _showSnapshot>>
				<<else>>
					<<set _showSnapshot to "compare">>
				<</if>>
				<<replace "#moneyStatsDiv">><<moneyStats>><</replace>>
			<</link>>
		</span>
	<</if>>
	<<if _moneyStatsSorting>>
		| <<link "Reset Sorting">>
			<<unset _moneyStatsSorting>>
			<<replace "#moneyStatsDiv">><<moneyStats>><</replace>>
		<</link>>
		<<run $_moneyKeys.sort((a, b) => {
			if (_moneyStatsSorting.includes("Desc")) {
				const tempSwap = clone(a);
				a = clone(b);
				b = tempSwap;
			}
			switch(_moneyStatsSorting.replace("Desc","")) {
				case "Source":
					if (a.toUpperCase() < b.toUpperCase()) return -1;
					return 1;
					break;
				case "Earned":
					return ($_moneyStats[b].earned || 0) - ($_moneyStats[a].earned || 0);
				case "Spent":
					return ($_moneyStats[b].spent || 0) - ($_moneyStats[a].spent || 0);
				case "Earned Count":
					return ($_moneyStats[b].earnedCount || 0) - ($_moneyStats[a].earnedCount || 0);
				case "Earned Average":
					return ($_moneyStats[b].earned / $_moneyStats[b].earnedCount || 0) - ($_moneyStats[a].earned / $_moneyStats[a].earnedCount || 0);
				case "Hour Rates":
					return (statChange.timeTrackingTotal(b) ? $_moneyStats[b].earned / statChange.timeTrackingTotal(b) : 0) - (statChange.timeTrackingTotal(a) ? $_moneyStats[a].earned / statChange.timeTrackingTotal(a) : 0);
				case "Spent Count":
					return ($_moneyStats[b].spentCount || 0) - ($_moneyStats[a].spentCount || 0);
				case "Spent Average":
					return ($_moneyStats[b].spent / $_moneyStats[b].spentCount || 0) - ($_moneyStats[a].spent / $_moneyStats[a].spentCount || 0);
				case "Date":
					return (Math.max($_moneyStats[b].earnedTimeStamp || 0, $_moneyStats[b].spentTimeStamp || 0)) - (Math.max($_moneyStats[a].earnedTimeStamp || 0, $_moneyStats[a].spentTimeStamp || 0));
			}
		})>>
	<</if>>
	<table class="statsTable">
		<thead>
			<tr>
				<th scope="col"><<moneyStatsTitle "Source">></th>
				<th scope="col"><<moneyStatsTitle "Spent">></th>
				<<if _moneyStatsAverages>>
					<th scope="col"><<moneyStatsTitle "Spent Average">></th>
				<</if>>
				<<if _moneyStatsCount>>
					<th scope="col"><<moneyStatsTitle "Spent Count">></th>
				<</if>>
				<th scope="col"><<moneyStatsTitle "Earned">></th>
				<<if _moneyStatsAverages>>
					<th scope="col"><<moneyStatsTitle "Earned Average">></th>
				<</if>>
				<<if _moneyStatsCount>>
					<th scope="col"><<moneyStatsTitle "Earned Count">></th>
				<</if>>
				<<if _moneyStatsHourRates>>
					<th scope="col"><<moneyStatsTitle "Hour Rates">></th>
				<</if>>
				<<if _moneyStatsDate>>
					<th scope="col"><<moneyStatsTitle "Date">></th>
				<</if>>
			</tr>
		</thead>
		<<if _showSnapshot is "show">><<set _timeTrackingSnapshotOveride to true>><</if>>
		<<for $_key range $_moneyKeys>>
			<<if $_moneyStats[$_key].earned or $_moneyStats[$_key].spent>>
				<tbody class="stat">
					<td data-label="Source"><<moneyStatsNames $_key>></td>
					<td data-label="Spent" @class="$_moneyStats[$_key].spent ? '' : 'mobileHidden'">
						<<if $_moneyStats[$_key].spent>>
							<<printmoney `$_moneyStats[$_key].spent or 0` "red">>
							<<moneyStatsCompare $_key "spent">>
						<<else>>
							<span class="dash">-</span>
						<</if>>
					</td>
					<<if _moneyStatsAverages>>
						<td data-label="Spent Average" @class="$_moneyStats[$_key].spent ? '' : 'mobileHidden'">
							<<if $_moneyStats[$_key].spent>>
								<<printmoney `$_moneyStats[$_key].spent / $_moneyStats[$_key].spentCount or 0` "red">>
							<<else>>
								<span class="dash">-</span>
							<</if>>
						</td>
					<</if>>
					<<if _moneyStatsCount>>
						<td data-label="Spent Count" @class="$_moneyStats[$_key].spent ? '' : 'mobileHidden'">
							<<if $_moneyStats[$_key].spentCount>>
								<<print $_moneyStats[$_key].spentCount>>
							<<else>>
								<span class="dash">-</span>
							<</if>>
						</td>
					<</if>>
					<td data-label="Earned" @class="$_moneyStats[$_key].earned ? '' : 'mobileHidden'">
						<<if $_moneyStats[$_key].earned>>
							<<printmoney `$_moneyStats[$_key].earned or 0`>>
							<<moneyStatsCompare $_key "earned">>
						<<else>>
							<span class="dash">-</span>
						<</if>>
					</td>
					<<if _moneyStatsAverages>>
						<td data-label="Earned Average" @class="$_moneyStats[$_key].earned ? '' : 'mobileHidden'">
							<<if $_moneyStats[$_key].earned>>
								<<printmoney `$_moneyStats[$_key].earned / $_moneyStats[$_key].earnedCount or 0`>>
							<<else>>
								<span class="dash">-</span>
							<</if>>
						</td>
					<</if>>
					<<if _moneyStatsCount>>
						<td data-label="Earned Count" @class="$_moneyStats[$_key].earned ? '' : 'mobileHidden'">
							<<if $_moneyStats[$_key].earnedCount>>
								<<print $_moneyStats[$_key].earnedCount>>
							<<else>>
								<span class="dash">-</span>
							<</if>>
						</td>
					<</if>>
					<<if _moneyStatsHourRates>>
						<td data-label="Hour Rates">
							<<if statChange.timeTrackingTotal($_key)>>
								<<printmoney `$_moneyStats[$_key].earned / statChange.timeTrackingTotal($_key)`>>
								<<moneyStatsCompareHourly $_key>>
							<<else>>
								<span class="dash">-</span>
							<</if>>
						</td>
					<</if>>
					<<if _moneyStatsDate>>
						<td data-label="Date"><<moneyStatsDate $_moneyStats[$_key].spentTimeStamp $_moneyStats[$_key].earnedTimeStamp>></td>
					<</if>>
				</tbody>
			<</if>>
		<</for>>
		<<unset _timeTrackingSnapshotOveride>>
		<tbody class="total">
			<td data-label="Source">Total</td>
			<td data-label="Spent">
				<<printmoney $_moneyTotal.spent "red">>
				<<if _showSnapshot is "compare">>
					<<print "+<<printmoney `(_moneyStatsTotal.spent or 0) - (_moneyStatsSnapshotTotal.spent or 0)` 'white'>>">>
				<<else>>
					<<moneyStatsCompare "total" "spent">>
				<</if>>
			</td>
			<<if _moneyStatsAverages>>
				<td data-label="Spent Average"><<printmoney `$_moneyTotal.spent / $_moneyTotal.spentCount or 0` "red">></td>
			<</if>>
			<<if _moneyStatsCount>>
				<td data-label="Spent Count"><<print $_moneyTotal.spentCount>></td>
			<</if>>
			<td data-label="Earned">
				<<printmoney $_moneyTotal.earned>>
				<<if _showSnapshot is "compare">>
					<<print "+<<printmoney `(_moneyStatsTotal.earned or 0) - (_moneyStatsSnapshotTotal.earned or 0)` 'white'>>">>
				<<else>>
					<<moneyStatsCompare "total" "earned">>
				<</if>>
			</td>
			<<if _moneyStatsAverages>>
				<td data-label="Earned Average"><<printmoney `$_moneyTotal.earned / $_moneyTotal.earnedCount or 0`>></td>
			<</if>>
			<<if _moneyStatsCount>>
				<td data-label="Earned Count"><<print $_moneyTotal.earnedCount>></td>
			<</if>>
			<<if _moneyStatsHourRates>>
				<td data-label="Hour Rates">-</td>
			<</if>>
			<<if _moneyStatsDate>>
				<td data-label="Date"><<moneyStatsDate $_moneyTotal.spentTimeStamp $_moneyTotal.earnedTimeStamp>></td>
			<</if>>
		</tbody>
		<<if _showSnapshot>>
			<tfoot>
				<tr>
					<td colspan="3">
						<<set _snapShotDate to new DateTime($moneyStatsSnapshot.date)>>
						Snapshot from: 
						<<switch $options.dateFormat>>
							<<case "en-US">>
								<<print _snapShotDate.month>>/<<print _snapShotDate.day>>/<<print _snapShotDate.year>>
							<<case "zh-CN">>
								<<print _snapShotDate.year>>/<<print _snapShotDate.month>>/<<print _snapShotDate.day>>
							<<default>>
								<<print _snapShotDate.day>>/<<print _snapShotDate.month>>/<<print _snapShotDate.year>>
						<</switch>>
						- <<ampm _snapShotDate.hour _snapShotDate.minute>>
						<br>
						Snapshot age: <<statisticsTimeCompare $moneyStatsSnapshot.date>>
					</td>
				</tr>
			</tfoot>
		<</if>>
	</table>
<</widget>>

<<widget "moneyStatsNames">><<silently>>
	<<switch _args[0]>>
		<<case "cafeWaiter">><<set $_text_output to $player.gender_appearance is "m" ? "Cafe Waiter" : "Cafe Waitress">>
		<<case "partyDanceTips">><<set $_text_output to "Party Dance Job Tips">>
		<<case "danubeDanceTips">><<set $_text_output to "Danube Dance Job Tips">>
		<<default>><<set $_text_output to camelCaseToTitle(_args[0])>>
	<</switch>>
<</silently>><<if $_text_output>><<print $_text_output>><</if>>
<</widget>>

<<widget "moneyStatsTitle">><<silently>>
	<<if _moneyStatsSorting is _args[0]>>
		<<set $_text_output to ` <<link "${_args[0]}&#x25B2;">><<set _moneyStatsSorting to "${_args[0]}Desc">><<replace "#moneyStatsDiv">><<moneyStats>><</replace>><</link>>`>>
	<<elseif  _moneyStatsSorting is _args[0] + "Desc">>
		<<set $_text_output to ` <<link "${_args[0]}&#x25BC;">><<unset _moneyStatsSorting>><<replace "#moneyStatsDiv">><<moneyStats>><</replace>><</link>>`>>
	<<else>>
		<<set $_text_output to ` <<link "${_args[0]}">><<set _moneyStatsSorting to "${_args[0]}">><<replace "#moneyStatsDiv">><<moneyStats>><</replace>><</link>>`>>
	<</if>>
<</silently>><<if $_text_output>><<print $_text_output>><</if>>
<</widget>>

<<widget "moneyStatsCompare">><<silently>>
	<<if _args[0] and _args[1] and _showSnapshot is "compare">>
		<<set $_amount to (_moneyStats[_args[0]][_args[1]] or 0) - (_moneyStatsSnapshot[_args[0]] ? _moneyStatsSnapshot[_args[0]][_args[1]] || 0 : 0)>>
		<<set $_text_output to `+<<printmoney ${$_amount} "white">>`>>
	<</if>>
<</silently>><<if $_text_output>><<print $_text_output>><</if>>
<</widget>>

<<widget "moneyStatsCompareHourly">><<silently>>
	<<if _args[0] and _showSnapshot is "compare">>
		<<if statChange.timeTrackingTotal(_args[0]) and _moneyStats[_args[0]]?.earned and _moneyStatsSnapshot[_args[0]]?.earned>>
			<<set $_current to _moneyStats[_args[0]].earned / statChange.timeTrackingTotal(_args[0])>>
			<<set _timeTrackingSnapshotOveride to true>>
			<<if statChange.timeTrackingTotal(_args[0])>>
				<<set $_previous to _moneyStatsSnapshot[_args[0]].earned / statChange.timeTrackingTotal(_args[0])>>
				<<set $_amount to $_current - $_previous>>
				<<set $_text_output to `${$_amount gt 0 ? "+" : ""}<<printmoney ${$_amount} ${$_amount lt 0 ? "red" : "white"}>>`>>
			<</if>>
			<<unset _timeTrackingSnapshotOveride>>
		<</if>>
	<</if>>
<</silently>><<if $_text_output>><<print $_text_output>><</if>>
<</widget>>

<<widget "moneyStatsDate">><<silently>>
	<<if _args[0] or _args[1]>>
		<<set $_time to new DateTime(Math.max(_args[0] or 0, _args[1] or 0))>>
		<<switch $options.dateFormat>>
			<<case "en-US">>
				<<set $_text_output to `<<print $_time.month>>/<<print $_time.day>>/<<print $_time.year>>`>>
			<<case "zh-CN">>
				<<set $_text_output to `<<print $_time.year>>/<<print $_time.month>>/<<print $_time.day>>`>>
			<<default>>
				<<set $_text_output to `<<print $_time.day>>/<<print $_time.month>>/<<print $_time.year>>`>>
		<</switch>>
		<<set $_text_output += ` - <<ampm $_time.hour $_time.minute>>`>>
	<<else>>
		<<set $_text_output to `<span class="dash">-</span>`>>
	<</if>>
<</silently>><<if $_text_output>><<print $_text_output>><</if>>
<</widget>>

<<widget "virginityToolTip">><<silently>>
	<<if _args[0]?.timestamp and _args[1] isnot true>>
		<<set $_time to new DateTime(_args[0].timestamp)>>
		<<switch $options.dateFormat>>
			<<case "en-US">>
				<<set $_text_output to `Taken on: ${$_time.month}/${$_time.day}/${$_time.year}`>>
			<<case "zh-CN">>
				<<set $_text_output to `Taken on: ${$_time.year}/${$_time.month}/${$_time.day}`>>
			<<default>>
				<<set $_text_output to `Taken on: ${$_time.day}/${$_time.month}/${$_time.year}`>>
		<</switch>>
		<<set $_text_output += ` - ${ampm($_time.hour, $_time.minute)}<br>How recent: <<c>><<statisticsTimeCompare _args[0].timestamp>><</c>>`>>
		<<set $_linkColour to "linkBlue">>
		<<if _args[0].consensual isnot undefined>>
			<<set $_text_output += `<br>Consensual: ${_args[0].consensual ? "True" : "False"}`>>
			<<set $_linkColour to _args[0].consensual ? "green" : "red">>
		<</if>>
		<<if _args[0].position>>
			<<set $_text_output += `<br>Sex Position: ${_args[0].position.toUpperFirst()}`>>
		<</if>>
		<<if _args[0].playerPenisSize>>
			<<set $_penisSize to ["Micro", "Mini", "Tiny", "Small", "Normal", "Large", "Enormous"]>>
			<<set $_text_output += `<br>Penis size: ${$_penisSize[_args[0].playerPenisSize + 2]}`>>
		<<elseif _args[0].npcPenisSize>>
			<<set $_penisSize to ["Tiny", "Average", "Thick", "Huge", "Colossal"]>>
			<<if !_args[0].npcPenisdesc or !["knotted", "spiked", "strange","equine","avian","bovine","arachnid"].includes(_args[0].npcPenisdesc)>>
				<<set $_text_output += `<br>Penis size${_args[0].npcPenisSize2 ? "s" : ""}: ${$_penisSize[_args[0].npcPenisSize - 1]}`>>
				<<if _args[0].npcPenisSize2>>
					<<set $_text_output += ` and ${$_penisSize[_args[0].npcPenisSize2 - 1]}`>>
				<</if>>
			<<else>>
				<<set $_text_output += `<br>Penis${_args[0].npcPenisSize2 ? "es" : ""}: ${$_penisSize[_args[0].npcPenisSize - 1]} ${_args[0].npcPenisdesc}`>>
				<<if _args[0].npcPenisSize2>>
					<<set $_text_output += ` and ${$_penisSize[_args[0].npcPenisSize2 - 1]} ${_args[0].npcPenisdesc2}`>>
				<</if>>
			<</if>>
		<</if>>
		<<switch _args[0].passage>>
			<<case "Tutorial">><<set $_special to "Didn't know how to scream">>
			<<case "Brothel Show Virginity Sex">><<set $_special to "Sold to the highest bidder">>
			<<case "Brothel Show Virginity Rape">><<set $_special to "Stolen from the highest bidder">>
			<<case "Sydney Temple Pure Sex">>
				<<if _args[2] is 'npc' and setup.loveInterestNpc.includes(_args[1])>>
					<<set $_special to "Given to <<nnpc_his _args[1]>> promised">>
				<<else>>
					<<set $_special to "Given to your promised">>
				<</if>>
			<<case "Sydney Temple Corrupt Sex">><<set $_special to "Defiled in the temple">>
			<<case "Estate Cards Sex">><<set $_special to "Gambled away">>
			<<case "Underground Robin Kiss Intro">>
				<<set $_special to "Taken when collared together">>
			<<case "Underground Robin Kiss Molestation">>
				/* This expected this detail to be only visible for the player's virginity */
				<<if _args[2] is "pc">>
					<<set $_sameTime to "">>
					<<set $_asRobins to "">>
					<<set $_eachOther to "Robin">>
					<<set $_otherVirginity to C.npc.Robin?.virginityDetails?.[_args[3]]?.passage is "Underground Robin Kiss Molestation" ? _args[3] : undefined>>
					<<if !$_otherVirginity>>
						<<set $_otherVirginity to C.npc.Robin?.virginityDetails?.vaginal?.passage is "Underground Robin Kiss Molestation" ? "vaginal" : (C.npc.Robin?.virginityDetails?.anal?.passage is "Underground Robin Kiss Molestation" ? "anal" : undefined)>>
					<</if>>
					<<if $_otherVirginity>>
						<<if Math.abs(_args[0]?.timestamp - C.npc.Robin.virginityDetails[$_other].timestamp) lte 1000>>
							<<set $_sameTime to "at the same time ">>
						<<else>>
							<<set $_sameTime to "in a similar situation ">>
						<</if>>
						<<set $_asRobins to `as Robin's ${$_otherVirginity is _args[3] ? "" : ($_otherVirginity + " virginity ")}`>>
						<<set $_eachOther to "each other">>
					<</if>>
					<<set $_special to `Taken ${$_sameTime}${$_asRobins}while kissing ${$_eachOther}`>>
				<</if>>
			<<case "Moor Phallus Plant Masturbation">>
				<<set $_special to "Driven mad with pleasure">>
			<<default>>
				<<if _args[0].npcPenisSize gte 5>>
					<<set $_special to `${_args[3] is "vaginal" ? "Broken" : "Taken"} in the most brutal of ways`>>
				<<elseif _args[0].npcPenisSize2 isnot undefined>>
					<<set $_special to "Two for the price of one">>
				<</if>>
		<</switch>>
		<<if $_special>><<set $_text_output += `<div class="lewd">Special: ${$_special}</div>`>><</if>>
		<<if setup.loveInterestNpc.includes(_args[1]) and $_linkColour isnot "red">>
			<<set $_linkColour to "lewd">>
		<</if>>
	<</if>>
<</silently>><<if $_text_output>> <mouse @class="'tooltip ' + $_linkColour">(?)<span><<print $_text_output>></span></mouse><</if>>
<</widget>>

<<widget "badEndStats">>
	<<set $_badEndStats to clone($badEndStats)>>
	<<run $_badEndStats.forEach(badEnd => {
		if (badEnd.reasonStart and setup.badEndReasonText[badEnd.reasonStart]) badEnd.reasonStart = setup.badEndReasonText[badEnd.reasonStart];
		if (badEnd.reasonEnd and setup.badEndReasonText[badEnd.reasonEnd]) badEnd.reasonEnd = setup.badEndReasonText[badEnd.reasonEnd];
	})>>
	<span @class="_badEndStatsHowLongAgo ? 'goldLink' : ''">
		<<link `_badEndStatsTimeSince ? "Hide How Long Ago" : "Show How Long Ago"`>>
			<<set _badEndStatsHowLongAgo to !_badEndStatsHowLongAgo>>
			<<if !_badEndStatsHowLongAgo>><<unset _badEndStatsHowLongAgo>><</if>>
			<<replace "#badEndStatsDiv">><<badEndStats>><</replace>>
		<</link>>
	</span> |
	<span @class="_badEndStatsReasonStart ? 'goldLink' : ''">
		<<link `_badEndStatsReasonStart ? "Hide Start Reason" : "Show Start Reason"`>>
			<<set _badEndStatsReasonStart to !_badEndStatsReasonStart>>
			<<if !_badEndStatsReasonStart>><<unset _badEndStatsReasonStart>><</if>>
			<<replace "#badEndStatsDiv">><<badEndStats>><</replace>>
		<</link>>
	</span> |
	<span @class="_badEndStatsReasonEnd ? 'goldLink' : ''">
		<<link `_badEndStatsReasonEnd ? "Hide End Reason" : "Show End Reason"`>>
			<<set _badEndStatsReasonEnd to !_badEndStatsReasonEnd>>
			<<if !_badEndStatsReasonEnd>><<unset _badEndStatsReasonEnd>><</if>>
			<<replace "#badEndStatsDiv">><<badEndStats>><</replace>>
		<</link>>
	</span>
	<<if _badEndStatsSorting>>
		| <<link "Reset Sorting">>
			<<unset _badEndStatsSorting>>
			<<replace "#badEndStatsDiv">><<badEndStats>><</replace>>
		<</link>>
		<<run $_badEndStats.sort((a, b) => {
			if (_badEndStatsSorting.includes("Desc")) {
				const tempSwap = clone(a);
				a = clone(b);
				b = tempSwap;
			}
			switch(_badEndStatsSorting.replace("Desc","")) {
				case "Bad End":
					if (a.source.toUpperCase() < b.source.toUpperCase()) return -1;
					return 1;
				case "Started":
					return (b.trackedStart || 0) - (a.trackedStart || 0);
				case "Ended": case "Time since it ended":
					return (b.trackedEnd || 0) - (a.trackedEnd || 0);
				case "Duration":
					return ((b.trackedEnd || 0) - b.trackedStart) - ((a.trackedEnd || 0) - a.trackedStart);
				case "Start Reason":
					if ((a.reasonStart || "").toUpperCase() < (b.reasonStart || "").toUpperCase()) return -1;
					return 1;
				case "End Reason":
					if ((a.reasonEnd || "").toUpperCase() < (b.reasonEnd || "").toUpperCase()) return -1;
					return 1;
			}
		})>>
	<</if>>

	<table class="statsTable">
		<thead>
			<tr>
				<th scope="col"><<badEndStatsTitle "Bad End">></th>
				<th scope="col"><<badEndStatsTitle "Started">></th>
				<th scope="col"><<badEndStatsTitle "Ended">></th>
				<th scope="col"><<badEndStatsTitle "Duration">></th>
				<<if _badEndStatsHowLongAgo>>
					<th scope="col"><<badEndStatsTitle "How Long Ago">></th>
				<</if>>
				<<if _badEndStatsReasonStart>>
					<th scope="col"><<badEndStatsTitle "Start Reason">></th>
				<</if>>
				<<if _badEndStatsReasonEnd>>
					<th scope="col"><<badEndStatsTitle "End Reason">></th>
				<</if>>
			</tr>
		</thead>
			<<for $_badEnd range $_badEndStats>>
				<tbody class="stat">
					<td data-label="Bad End">
						<<print $_badEnd.source>>
						<<if $_badEnd.notesStart or $_badEnd.notesEnd>>
							<<set $_includesError to $_badEnd?.notesStart?.includes("Not correctly tracked") or $_badEnd?.notesEnd?.includes("Not correctly tracked")>>
							<mouse @class="'tooltip ' + ($_includesError ? 'red' : 'linkBlue')">(?)<span>
								<<if $_badEnd.notesStart>><<print $_badEnd.notesStart>><</if>>
								<<if $_badEnd.notesEnd>>
									<<if $_badEnd.notesStart>><hr><</if>>
									<<print $_badEnd.notesEnd>>
								<</if>>
							</span></mouse>
						<</if>>
					</td>
					<td data-label="Started">
						<<set $_time to new DateTime($_badEnd.trackedStart)>>
						<<switch $options.dateFormat>>
							<<case "en-US">>
								Started: $_time.month/$_time.day/$_time.year
							<<case "zh-CN">>
								Started: $_time.year/$_time.month/$_time.day
							<<default>>
								Started: $_time.day/$_time.month/$_time.year
						<</switch>>
					</td>
					<td data-label="Ended">
						<<if $_badEnd.trackedEnd>>
							<<set $_time2 to new DateTime($_badEnd.trackedEnd)>>
							<<switch $options.dateFormat>>
								<<case "en-US">>
									Ended: $_time2.month/$_time2.day/$_time2.year
								<<case "zh-CN">>
									Ended: $_time2.year/$_time2.month/$_time2.day
								<<default>>
									Ended: $_time2.day/$_time2.month/$_time2.year
							<</switch>>
						<<else>>
							<span class="dash"></span>
						<</if>>
					</td>
					<td data-label="Duration">
						<<if $_badEnd.trackedEnd>>
							<<statisticsTimeCompare $_time $_time2>>
						<<else>>
							In progress
						<</if>>
					</td>
					<<if _badEndStatsHowLongAgo>>
						<td data-label="How Long Ago">
							<<if $_badEnd.trackedEnd>>
								<<statisticsTimeCompare $_time2>>
							<<else>>
								<span class="dash">-</span>
							<</if>>
						</td>
					<</if>>
					<<if _badEndStatsReasonStart>>
						<td data-label="Start Reason">
							<<if setup.badEndReasonText[$_badEnd.reasonStart] isnot undefined>>
								<<print setup.badEndReasonText[$_badEnd.reasonStart] or '<span class="dash">-</span>'>>
							<<elseif $_badEnd.reasonStart>>
								<<print $_badEnd.reasonStart>>
							<<else>>
								<span class="dash">-</span>
							<</if>>
						</td>
					<</if>>
					<<if _badEndStatsReasonEnd>>
						<td data-label="End Reason">
							<<if setup.badEndReasonText[$_badEnd.reasonEnd] isnot undefined>>
								<<print setup.badEndReasonText[$_badEnd.reasonEnd] or '<span class="dash">-</span>'>>
							<<elseif $_badEnd.reasonEnd>>
								<<print $_badEnd.reasonEnd>>
							<<else>>
								<span class="dash">-</span>
							<</if>>
						</td>
					<</if>>
				</tbody>
			<</for>>
	</table>
<</widget>>

<<widget "badEndStatsTitle">><<silently>>
	<<if _badEndStatsSorting is _args[0]>>
		<<set $_text_output to ` <<link "${_args[0]}&#x25B2;">><<set _badEndStatsSorting to "${_args[0]}Desc">><<replace "#badEndStatsDiv">><<badEndStats>><</replace>><</link>>`>>
	<<elseif  _badEndStatsSorting is _args[0] + "Desc">>
		<<set $_text_output to ` <<link "${_args[0]}&#x25BC;">><<unset _badEndStatsSorting>><<replace "#badEndStatsDiv">><<badEndStats>><</replace>><</link>>`>>
	<<else>>
		<<set $_text_output to ` <<link "${_args[0]}">><<set _badEndStatsSorting to "${_args[0]}">><<replace "#badEndStatsDiv">><<badEndStats>><</replace>><</link>>`>>
	<</if>>
<</silently>><<if $_text_output>><<print $_text_output>><</if>>
<</widget>>
