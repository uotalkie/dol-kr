:: FeatsUI [widget]
<<widget "feats">>
<<updateFeats>>
<br>
여기서는 여러 임무를 수행하는 것으로 VrelCoin을 얻을 수 있고, 각 임무는 단일 세이브 파일에서 특정 조건을 만족하는 것으로 해결됩니다. 이 VrelCoin은 게임을 새로 시작할 때 사용하여 추가 보너스를 받을 수 있습니다. 이 기능은 쿠키를 삭제한 상태에서도 작동은 하나, 새로운 게임을 시작하기 전에 가장 최근에 저장한 세이브 파일을 불러와야 합니다. 대부분의 도전과제는 특정한 씬을 봤거나, 특정한 대사를 봤을 때 자정에 달성됩니다. 하지만, 몇몇은 시각이 넘어갈 때 달성됩니다.
<br><br>
Playing on softmode or changing settings in specific ways may prevent you from earning some feats in your current game.
어떤 시점에서라도 치트를 활성화한다면 해당 게임에서는 이후 영구적으로 도전과제를 달성할 수 없게 됩니다.
다른 설정들도 해당 게임에서 특정한 도전과제를 영구적으로 잠가버립니다.
잠긴 도전과제는 붉은색으로 표시됩니다.

<<if $feats.locked>>
	<span class="red">You can't earn feats as you have enabled cheats at some point.</span>
<<elseif $debug is 1>>
	<span class="red">디버그 모드로 인해 비활성화 되었습니다.</span>
<<elseif $replayScene isnot undefined>>
	<span class="red">리플레이 모드로 인해 비활성화 되었습니다.</span>
<<elseif $feats.soft or $feats.pregnancyLocked>>
	<span class="red">Some feats are locked in this current game.</span>
<<else>>
	<span class="green">You can earn feats.</span>
<</if>>
<br><br>
현재 <<if $feats.allSaves.point is undefined>><<print $feats.allSaves.points>><<else>>0<</if>>개의 VrelCoin을 갖고 있습니다.
<br><br>
<<set $feats.filter to "General">>
필터:
<select id="featTypes" name="featTypes" onchange="V.feats.filter = this.value; Wikifier.wikifyEval('<<replace #featsList>><<featsList>><</replace>>')">
	<option value="General" selected>일반</option>
	<option value="Stats">스탯</option>
	<option value="Social">관계</option>
	<option value="Transformation">변화</option>
	<option value="Discoveries">발견</option>
	<option value="Special">특수</option>
	<option value="General" hidden="hidden" selected="selected">일반</option>
</select>
<br><br>
<div id="featsList">
	<<featsList>>
</div>

<</widget>>

<<widget "featsList">>
<<featsData>>
<<set _skip to []>>
<<set _filter to "All">>
<<set _keys to Object.keys(_feats)>>
<<for _i to 0; _i lt _keys.length; _i++>>
	<<if _skip.includes(_feats[_keys[_i]].series) or !_feats[_keys[_i]].filter.includes($feats.filter)>>
		<<continue>>
	<</if>>
	<<if Object.keys($feats.currentSave).includes(_keys[_i])>>
		<<set _owned to 2>>
	<<elseif Object.keys($feats.allSaves).includes(_keys[_i])>>
		<<set _owned to 1>>
	<<else>>
		<<set _owned to 0>>
		<<if _feats[_keys[_i]].hidden>>
			<<continue>>
		<</if>>
		<<if _feats[_keys[_i]].series isnot "">>
			<<set _skip.push(_feats[_keys[_i]].series)>>
		<</if>>
	<</if>>
	<div class="featList">
		<div class="featImage">
			<<if _owned gt 0>>
				<<switch _feats[_keys[_i]].difficulty>>
					<<case 1>><img @src="'img/ui/CopperCoin'+(_owned is 1 ? 'Dull':'')+'.png'" class="featCoin" @style="(_owned is 1 ? 'filter:brightness(65%) contrast(85%);':'')">
					<<case 2>><img @src="'img/ui/SilverCoin'+(_owned is 1 ? 'Dull':'')+'.png'" class="featCoin" @style="(_owned is 1 ? 'filter:brightness(75%) contrast(85%);':'')">
					<<case 3>><img @src="'img/ui/GoldCoin'+(_owned is 1 ? 'Dull':'')+'.png'" class="featCoin" @style="(_owned is 1 ? 'filter:brightness(65%) contrast(85%);':'')">
					<<case 4>><img @src="'img/ui/DiamondCoin'+(_owned is 1 ? 'Dull':'')+'.png'" class="featCoin" @style="(_owned is 1 ? 'filter:brightness(65%) contrast(85%);':'')">
					<<case 5>><img @src="'img/ui/RubyCoin'+(_owned is 1 ? 'Dull':'')+'.png'" class="featCoin" @style="(_owned is 1 ? 'filter:brightness(65%) contrast(85%);':'')">
				<</switch>>
			<<else>>
				<span class="dot"></span>
			<</if>>
		</div>
		<div class="featText">
			<<if ($feats.pregnancyLocked and _feats[_keys[_i]].pregnancyLockable) or ($feats.soft and _feats[_keys[_i]].softLockable) or $feats.locked or ($gamemode is "soft" or $alluremod lt 1)>>
				<<set _titleColor to " red">>
			<<else>>
				<<set _titleColor to "">>
			<</if>>
			<<if _owned gt 0 or _feats[_keys[_i]].hint is undefined>>
				<span @class="'title' + _titleColor"><<print _feats[_keys[_i]].title>></span>
				<br>
				<span class="text" style="font-size:75%"><<print _feats[_keys[_i]].desc>></span>
			<<else>>
				<span @class="'title' + _titleColor">?????</span>
				<br>
				<span class="text" style="font-size:75%"><<print _feats[_keys[_i]].hint>></span>
			<</if>>
			<br>
			<<if _owned is 2>>
				<span class="text" style="font-size:75%">달성 일자: <<print new Date($feats.currentSave[_keys[_i]]).toLocaleString()>></span>
			<<elseif _owned is 1>>
				<span class="text" style="font-size:75%">기존 달성 일자: <<print new Date($feats.allSaves[_keys[_i]]).toLocaleString()>></span>
			<</if>>
		</div>
	</div>
<</for>>
<div style="clear:both;"></div>
<</widget>>

/*Feat Popup*/
<<widget "displayFeat">>
<<silently>>
	<<featsData>>
	<<if _featsCount is undefined>>
		<<set _featsCount to 0>>
	<<else>>
		<<set _featsCount++>>
	<</if>>
<</silently>>
<<capture _featsCount>>
<div @id="'feat-' + _featsCount" @class="'feat feat' + _featsCount + (_featsCount gte 3 ? ' hiddenFeat' : '')">
	<div class="featImage">
		<<switch _feats[_args[0]].difficulty>>
			<<case 1>><img src="img/ui/CopperCoin.gif" class="featCoin">
			<<case 2>><img src="img/ui/SilverCoin.gif" class="featCoin">
			<<case 3>><img src="img/ui/GoldCoin.gif" class="featCoin">
			<<case 4>><img src="img/ui/DiamondCoin.gif" class="featCoin">
			<<case 5>><img src="img/ui/RubyCoin.gif" class="featCoin">
		<</switch>>
	</div>
	<div class="featText">
		<span class="title"><<print _feats[_args[0]].title>></span>
		<br>
		<span class="text" style="font-size:75%"><<print _feats[_args[0]].desc>></span>
	</div>
	<div @id="'closeFeat-' + _featsCount" class="closeFeat" @onclick="'closeFeats('+ _featsCount +')'"></div>
</div>
<</capture>>
<</widget>>

/*Feat Points Menu*/
<<widget "featsPointsMenu">>

<div id="featsStats">
	당신은 <span class="green"><<print $feats.allSaves.points - $featsBoosts.pointsUsed>>개의 VrelCoin</span>이 남아있다.
</div>
<br>
/*Have to do this due to the `????` names*/
<<set _listbox to '<<listbox "_upgradeNameID" autoselect>>'>>
<<for $_i to 0; $_i lt _upgradeNames.length; $_i++>>
	<<if !$featsBoosts.upgradeDetails[_upgradeNames[$_i]].hidden>>
		<<set _listbox += '<<option _visibleUpgradeNames[' + $_i + '] _visibleUpgradeIDs[' + $_i + ']>>'>>
	<</if>>
<</for>>
<<set _listbox += '<</listbox>> |'>>
<<print _listbox>>

<<set _upgradeName to _upgradeNames[_upgradeNameID]>>
<<link "이전">>
	<<set _upgradeNameID-->>
	<<if _upgradeNameID lt 0>>
		<<set _upgradeNameID to _upgradeNames.length - 1>>
	<</if>>
	<<if $featsBoosts.upgradeDetails[_upgradeNames[_upgradeNameID]].hidden>>
		<<for _upgradeNameID; $featsBoosts.upgradeDetails[_upgradeNames[_upgradeNameID]].hidden; _upgradeNameID-->>
		<</for>>
	<</if>>
	<<set _upgradeName to _upgradeNames[_upgradeNameID]>>
	<<updateFeatsPointsMenu>>
<</link>> |
<<link "다음">>
	<<set _upgradeNameID++>>
	<<if _upgradeNameID gte _upgradeNames.length>>
		<<set _upgradeNameID to 0>>
	<</if>>
	<<if $featsBoosts.upgradeDetails[_upgradeNames[_upgradeNameID]].hidden>>
		<<for _upgradeNameID; $featsBoosts.upgradeDetails[_upgradeNames[_upgradeNameID]].hidden; _upgradeNameID++>>
			<<if (_upgradeNameID + 1) gte _upgradeNames.length>>
				<<set _upgradeNameID to 0>>
				<<break>>
			<</if>>
		<</for>>
	<</if>>
	<<set _upgradeName to _upgradeNames[_upgradeNameID]>>
	<<updateFeatsPointsMenu>>
<</link>> |
<br><br>
<div @id="'feats-' + _upgradeName">
	<<featsMenu _upgradeName>>
</div>
<br>
<<if $featsBoosts.pointsUsed is 0>>
	당신은 <span class="green"><<print $featsBoosts.pointsUsed>> VrelCoin</span>을 사용했다.
	<br><br>
<<else>>
	당신은 다음 항목에 <span class="green"><<print $featsBoosts.pointsUsed>> VrelCoin</span>을 사용했다:
	<br>
	<ul>
		<<for $_i to 0; $_i lt _upgradeNames.length; $_i++>>
			<<if $featsBoosts.upgrades[_upgradeNames[$_i]] gt 0>>
				<li>
				<<switch _upgradeNames[$_i]>>
					<<case "randomClothing">>
						<<print ($featsBoosts.clothingGender eq "Either"?"남성용 혹은 여성용":($featsBoosts.clothingGender eq "Male"?"남성용":"여성용"))>> <<print $featsBoosts.name[_upgradeNames[$_i]]>>: <<print $featsBoosts.upgrades[_upgradeNames[$_i]]>>
					<<default>>
						<<print $featsBoosts.name[_upgradeNames[$_i]]>>: <<print $featsBoosts.upgrades[_upgradeNames[$_i]]>>
				<</switch>>
				</li>
			<</if>>
		<</for>>
	</ul>
<</if>>
<</widget>>

<<widget "featsMenu">>
<<set _name to _args[0]>>
<<capture _name>>
	<<set _details to $featsBoosts.upgradeDetails[_name]>>
	<<set _count to _details.count>>
	<<if _count gte _details.minCount>>
		<<switch _name>>
			<<case "money">>
				<span class="gold">초기 소지금:</span> £<<print $money/100 + $featsBoosts.upgrades.money * 50 * _count / _details.cost>>.00
			<<case "grades">>
				<span class="gold">초기 학교 성적:</span> +<<print $featsBoosts.upgrades.grades / _details.cost>>
			<<case "purity" "impurity">>
				<span class="gold">$featsBoosts.name[_name]:</span> +<<print $featsBoosts.upgrades[_name] / _details.cost>>
			<<case "newLife">>
				<span class="gold">새로운 삶을 살어리랏다:</span> +<<print $featsBoosts.upgrades.newLife / _details.cost>>
			<<case "aNewBestFriend">>
				<span class="gold">새로운 절친:</span> +<<print $featsBoosts.upgrades.aNewBestFriend / _details.cost>>
			<<case "randomClothing">>
				<span class="gold">무작위 의복:</span> +<<print 3 * $featsBoosts.upgrades.randomClothing / _details.cost>>
			<<case "tattoos">>
				<span class="gold">초기 문신:</span> +<<print $featsBoosts.upgrades.tattoos / _details.cost>>
			<<case "defaultMoves">>
				<span class="gold">추가 기본 행동:</span> +<<print $featsBoosts.upgrades.defaultMoves / _details.cost>>
			<<case "specialClothing">>
				<span class="gold">이전에 해금한 특수 복장 해금:</span> <<print ($featsBoosts.upgrades.specialClothing is 0?"False":"True")>>
			<<default>>
				<span class="gold">초기 $featsBoosts.name[_name]:</span> +<<print $featsBoosts.upgrades[_name] / _details.cost>>
		<</switch>>
		<br>
		<span class="gold">업그레이드에 필요한 VrelCoin:</span> _details.cost
		<br>
		<span class="gold">업그레이드:</span> <<print $featsBoosts.upgrades[_name] / _details.cost>>/<<print _details.limit / _details.cost>>
		<br>
		<<if _name is "randomClothing">>
			<span class="gold">옷 종류: </span>
			<label><<print '<<radiobutton "$featsBoosts.clothingGender" "Either" ' + ($featsBoosts.clothingGender is "Either" ? "checked" : "") + '>>'>>둘 다</label> |
			<label><<print '<<radiobutton "$featsBoosts.clothingGender" "Male" ' + ($featsBoosts.clothingGender is "Male" ? "checked" : "") + '>>'>>남자</label> |
			<label><<print '<<radiobutton "$featsBoosts.clothingGender" "Female" ' + ($featsBoosts.clothingGender is "Female" ? "checked" : "") + '>>'>>여자</label>
			<br>
			<span class="gold">커스텀 색상 활성화 (미친 결과 발생 가능): </span>
				<label><<print '<<radiobutton "$featsBoosts.clothingCustomColors" false ' + ($featsBoosts.clothingCustomColors is false ? "checked" : "") + '>>'>>아니오</label> |
				<label><<print '<<radiobutton "$featsBoosts.clothingCustomColors" true ' + ($featsBoosts.clothingCustomColors is true ? "checked" : "") + '>>'>>네</label>
			<br>
		<</if>>
		<<if _details.exclusive is "" or $featsBoosts.upgrades[_details.exclusive] is 0>>
			<<featsPointsMenuButtons _name _details.cost _details.limit>>
		<<else>>
			이 업그레이드를 사용하려면 <<print "$featsBoosts.name['"+_details.exclusive+"']">> 업그레이드를 제거해야 합니다.
		<</if>>

		<<if _name is "tattoos">>
			<<set _totalTattoos to $featsBoosts.upgrades.tattoos / _details.cost>>
			<<if _tattooNumber is undefined or _tattooNumber gt _totalTattoos>>
				<<set _tattooNumber to Math.clamp(_totalTattoos, 1, $featsBoosts.upgradeDetails.tattoos.limit / _details.cost)>>
			<</if>>

			<<if _totalTattoos gt 0>>
				<br>
				<span class="gold">문신 번호:</span>
				<<print _tattooNumber>>
				<br>
				<<if _tattooNumber gt 1>>
					<<link "이전 문신">>
						<<set _tattooNumber -= 1>>
						<<replace #featsPointsMenu>><<featsPointsMenu>><</replace>>
					<</link>> |
				<<else>>
					이전 문신 |
				<</if>>
				<<if _tattooNumber lt _totalTattoos>>
					<<link "다음 문신">>
						<<set _tattooNumber += 1>>
						<<replace #featsPointsMenu>><<featsPointsMenu>><</replace>>
					<</link>> |
				<<else>>
					다음 문신 |
				<</if>>
				<br>
				<span class="gold">어디에 문신을 할 것인가:</span>
				<<set _bodyPartOptions to ["Forehead","Left cheek","Right cheek","Left shoulder","Right shoulder","Back","Breasts","Left bottom","Right bottom","Left thigh","Right thigh","Pubic"]>>
				<<for _l to 1; _l lte _totalTattoos; _l++>>
					<<if _tattooNumber is _l>>
						<<continue>>
					<</if>>
					<<run _bodyPartOptions.delete($featsBoosts.tattoos[_l].bodypart)>>
				<</for>>
				<<trListboxItemsFromArray "_bodyPartOptions">><<listbox `"$featsBoosts.tattoos["+_tattooNumber+"].bodypart"` autoselect>>
					<<option "무작위" "Random">>
					<<optionsfrom _trListboxItems>>
				<</listbox>>
				<br>
				<span class="listMargin">
					<span class="gold">어떤 문신을 할 것인가:</span>
					<<featsTattooOptions>>
					<<trListboxItemsFromArray "_featsTattooOptions">><<listbox `"$featsBoosts.tattoos["+_tattooNumber+"].tattoo"` autoselect>>
						<<option "무작위" "Random">>
						<<optionsfrom _trListboxItems>>
					<</listbox>>
				</span>
				<br>
				<span class="listMargin">
					<span class="gold">문신 종류:</span>
					<<set _penOptions to ["Tattoo","Brand"]>>
					<<trListboxItemsFromArray "_penOptions">><<listbox `"$featsBoosts.tattoos["+_tattooNumber+"].pen"` autoselect>>
						<<optionsfrom _trListboxItems>>
					<</listbox>>
				</span>
				<br>
			<</if>>
		<</if>>
	<<else>>
		<span class="red"><<print $featsBoosts.missing[_name]>></span>
	<</if>>
<</capture>>
<</widget>>

<<widget "featsPointsMenuButtons">>
<<set _type to _args[0]>>
<<set _multi to _args[1]>>
<<set _max to _args[2]>>
<<capture _type _multi _max>>
	<<if _multi is undefined>>
		<<set _multi to 1>>
	<</if>>
	<<if _max is undefined>>
		<<set _max to 20>>
	<</if>>
	<<if $featsBoosts.upgrades[_type] gte 5 * _multi>>
		<<link "5 감소">><<print "<<updateFeatsPointsMenu _type " + (-5 * _multi) +">>">><</link>> |
	<<else>>
		5 감소 |
	<</if>>
	<<if $featsBoosts.upgrades[_type] gte 1 * _multi>>
	<<link "감소">><<print "<<updateFeatsPointsMenu _type " + (-1 * _multi) +">>">><</link>> |
	<<else>>
		감소 |
	<</if>>
	<<if $featsBoosts.upgrades[_type] / _multi lt _max / _multi
	and $feats.allSaves.points - $featsBoosts.pointsUsed gte 1 * _multi>>
		<<link "증가">><<print "<<updateFeatsPointsMenu _type " + (1 * _multi) +">>">><</link>> |
	<<else>>
		증가 |
	<</if>>
	<<if $featsBoosts.upgrades[_type] / _multi lt (_max / _multi) - 4
	and $feats.allSaves.points - $featsBoosts.pointsUsed gte 5 * _multi>>
		<<link "5 증가">><<print "<<updateFeatsPointsMenu _type " + (5 * _multi) +">>">><</link>>
	<<else>>
		5 증가
	<</if>>
	<<if _type is "tending">>
		<br><br>
		<span class="green">원예가</span> - 작물 수확량이 증가하고 비료를 사용하면 썩지 않습니다. 비료를 하나 가지고 시작합니다.
		<br>
		<span class="gold">업그레이드에 필요한 VrelCoin:</span> <<print "$featsBoosts.upgradeDetails.greenThumb.cost">><br>
		<span class="gold">업그레이드:</span> <<print $featsBoosts.upgrades.greenThumb / $featsBoosts.upgradeDetails.greenThumb.cost>>/<<print $featsBoosts.upgradeDetails.greenThumb.limit / $featsBoosts.upgradeDetails.greenThumb.cost>>
		<br>
		<<if $feats.allSaves.points - $featsBoosts.pointsUsed gte $featsBoosts.upgradeDetails.greenThumb.cost and !$featsBoosts.upgrades.greenThumb>>
			<<link "이 특성을 가지고 시작한다">><<print "<<updateFeatsPointsMenu greenThumb $featsBoosts.upgradeDetails.greenThumb.cost>>">><</link>> |
		<<else>>
			이 특성을 가지고 시작한다 |
		<</if>>
		<<if $featsBoosts.upgrades.greenThumb>>
			<<link "이 특성을 제거한다">><<print "<<updateFeatsPointsMenu greenThumb " + (-1 * $featsBoosts.upgradeDetails.greenThumb.cost) + ">>">><</link>> |
		<<else>>
			이 특성을 제거한다 |
		<</if>>
	<</if>>
<</capture>>
<</widget>>

<<widget "updateFeatsPointsMenu">>
<<if $feats.allSaves.points - $featsBoosts.pointsUsed gte _args[1] or _args[1] lt 0>>
	<<set $featsBoosts.upgrades[_args[0]] += _args[1]>>
	<<set $featsBoosts.pointsUsed += _args[1]>>
<</if>>
<<replace #featsPointsMenu>>
	<<featsPointsMenu>>
<</replace>>
<</widget>>

<<widget "featsTattooOptions">>
<<if _featsTattooOptions is undefined>>
	<<set _featsTattooOptions to []>>
	<<for _value range setup.bodywriting>>
		/*ToDo: Pregnancy, remove `or _value.special is "pregnancy"` to properly enable*/
		<<if _value.featSkip is true or _value.special is "pregnancy">>
			<<continue>>
		<</if>>
		<<run _featsTattooOptions.push(_value.writing)>>
	<</for>>
<</if>>
<</widget>>

/* Fake feats, for when you want to gaslight the player. Used for the Wraith, primarily */
<<widget "displayFeatFake">>
<<if _args[0] and $feats.locked is false and $cheatdisable is "t" and $debug is 0 and $gamemode isnot "soft" and $alluremod gte 1>>
	<<silently>>
		<<featsData>>
		<<if _featsCount is undefined>>
			<<set _featsCount to 0>>
		<<else>>
			<<set _featsCount++>>
		<</if>>
	<</silently>>
	<div @id="'feat-' + _featsCount" class="feat">
		<div class="featImage">
			<<switch _feats[_args[0]].difficulty>>
				<<case 1>><img src="img/ui/CopperCoinFake.gif" class="featCoin">
				<<case 2>><img src="img/ui/SilverCoinFake.gif" class="featCoin">
				<<case 3>><img src="img/ui/GoldCoinFake.gif" class="featCoin">
				<<case 3>><img src="img/ui/DiamondCoinFake.gif" class="featCoin">
				<<case 3>><img src="img/ui/RubyCoinFake.gif" class="featCoin">
			<</switch>>
		</div>
		<div class="featText">
			<<switch _args[0]>>
				<<case "It Belongs in a Museum">>
					<span class="title">이건 박물관으로 가야해?</span>
				<<default>>
					<<if _feats[_args[0]].title.endsWith("?")>>
						<span class="text"><<print _feats[_args[0]].title>></span>
					<<else>>
						<span class="text"><<print _feats[_args[0]].title>>?</span>
					<</if>>
					<span class="title"><<print _feats[_args[0]].title>>?</span>
			<</switch>>
			<br>
			<<switch _args[0]>>
				<<case "No More Control">>
					<span class="text">당신은 이보다 더 음란해질 방법을 모른다... 그렇지?</span>
				<<case "Teachers Nightmare">>
					<span class="text">당신은 공포 그 자체다... 그렇지?</span>
				<<case "Anti-Social Moth">>
					<span class="text">누가 친구가 필요하다는 거지... 그렇지?</span>
				<<default>>
					<<if _feats[_args[0]].desc.endsWith(".")>>
						<span class="text"><<print _feats[_args[0]].desc>>.. 그렇지?</span>
					<<else>>
						<span class="text"><<print _feats[_args[0]].desc>>... 그렇지?</span>
					<</if>>
			<</switch>>
		</div>
		<div @id="'closeFeat-' + _featsCount" class="closeFeat" @onclick="'closeFeats('+ _featsCount +')'"></div>
	</div>
<</if>>
<</widget>>
